var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.875,1,2.397]],["body/controllers/AppController.html",[0,2.856,1,3.651,2,2.21,3,0.24,4,0.24,5,0.209,6,3.533,7,0.338,8,1.942,9,3.091,10,2.561,11,5.06,12,5.361,13,3.533,14,0.774,15,5.85,16,4.05,17,1.629,18,0.023,19,5.361,20,0.623,21,4.148,22,1.727,23,1.146,24,0.338,25,1.217,26,4.043,27,1.942,28,2.856,29,4.148,30,4.148,31,0.484,32,3.128,33,3.128,34,1.123,35,3.412,36,3.533,37,5.361,38,1.925,39,3.533,40,0.24,41,0.172,42,2.825,43,1.925,44,4.148,45,2.333,46,3.533,47,4.148,48,1.805,49,4.148,50,0.017,51,0.017]],["title/modules/AppModule.html",[52,1.531,53,2.397]],["body/modules/AppModule.html",[1,3.463,2,2.327,3,0.178,4,0.178,5,0.155,18,0.023,23,1.185,31,0.571,34,0.83,35,3.496,36,2.612,38,1.424,40,0.178,41,0.127,50,0.014,51,0.014,52,1.9,53,4.727,54,1.523,55,2.168,56,2.612,57,2.612,58,2.612,59,3.791,60,3.791,61,3.496,62,3.791,63,3.022,64,2.508,65,1.762,66,1.762,67,3.067,68,2.72,69,2.72,70,3.067,71,3.067,72,3.067,73,2.612,74,2.313,75,2.313,76,1.762,77,4.367,78,3.067,79,3.067,80,4.367,81,3.067,82,4.367,83,2.508,84,2.612,85,3.719,86,3.067,87,2.612,88,2.974,89,3.067,90,2.72,91,3.067,92,4.367,93,3.067,94,2.089,95,4.367,96,2.612,97,2.974,98,3.067,99,2.612,100,3.067,101,2.72,102,3.067,103,2.313,104,3.067,105,3.067,106,1.762,107,3.067,108,3.067,109,2.612,110,2.089,111,2.313,112,3.067,113,3.067,114,3.067,115,3.067,116,4.367,117,3.067,118,3.067,119,3.067,120,2.612,121,3.067,122,1.762,123,3.067,124,3.067,125,2.612,126,2.72,127,4.367,128,4.367,129,1.785,130,3.067,131,3.067,132,3.067,133,3.067,134,2.313,135,1.111,136,4.178,137,0.696,138,1.634,139,1.335,140,3.067,141,3.067]],["title/injectables/AppService.html",[35,2.021,142,0.899]],["body/injectables/AppService.html",[3,0.22,4,0.22,5,0.192,7,0.31,8,1.835,9,2.644,10,2.19,11,4.316,13,4.316,14,0.756,15,4.852,16,3.939,18,0.023,20,0.589,22,1.632,23,1.084,24,0.413,25,1.15,26,2.87,27,1.378,28,2.028,31,0.495,34,1.03,35,2.91,40,0.22,41,0.157,43,1.766,45,2.478,46,4.316,48,2.478,50,0.016,51,0.016,63,1.889,87,3.241,122,2.91,129,2.328,135,2.063,142,1.294,143,1.656,144,3.241,145,2.352,146,3.241,147,3.783,148,3.806,149,4.316,150,3.806,151,3.821,152,2.37,153,3.806,154,2.37,155,2.186,156,3.806,157,3.241,158,2.186,159,2.644,160,3.806,161,3.806,162,3.241,163,3.241,164,1.73,165,3.241,166,1.656,167,2.37,168,2.592,169,3.806,170,3.806,171,3.806,172,2.592,173,2.592,174,2.37,175,2.87,176,2.87,177,2.37]],["title/modules/AuthModule.html",[52,1.531,59,2.192]],["body/modules/AuthModule.html",[3,0.269,4,0.269,5,0.234,18,0.023,31,0.548,34,1.256,40,0.269,41,0.192,50,0.018,51,0.018,52,2.505,54,2.304,55,2.858,59,4.27,64,3.306,65,2.666,66,2.666,68,3.586,69,2.891,178,3.953,179,3.953,180,4.27,181,4.642,182,3.953,183,3.161,184,5.757,185,3.161,186,2.891,187,3.953,188,3.5,189,3.953,190,3.953,191,3.5,192,3.5,193,3.953,194,3.953,195,3.953]],["title/classes/CreateLinkDto.html",[41,0.146,196,2.192]],["body/classes/CreateLinkDto.html",[3,0.231,4,0.231,5,0.201,7,0.325,14,0.819,17,1.588,18,0.023,20,0.8,23,1.246,24,0.561,25,1.186,31,0.426,40,0.231,41,0.216,50,0.016,51,0.016,137,1.496,164,1.784,167,3.63,196,3.255,197,1.018,198,5.921,199,3.007,200,1.186,201,3.105,202,3.105,203,3.97,204,3.97,205,3.348,206,3.348,207,3.988,208,3.988,209,3.988,210,3.988,211,2.274,212,3.988,213,3.988,214,3.988,215,3.988,216,4.395,217,3.988,218,3.988,219,2.136,220,3.97,221,5.226,222,1.361,223,2.716]],["title/classes/CreateRefreshTokenDto.html",[41,0.146,224,2.192]],["body/classes/CreateRefreshTokenDto.html",[3,0.274,4,0.274,5,0.239,7,0.385,14,0.677,17,1.437,18,0.022,20,0.733,24,0.514,31,0.474,40,0.274,41,0.241,50,0.018,51,0.018,137,1.564,164,1.988,197,1.208,200,1.322,219,2.579,222,1.615,224,3.627,225,4.486,226,4.486,227,3.221,228,4.759,229,3.362,230,4.729,231,4.729,232,4.729,233,3.566]],["title/classes/CreateTokenRecoverPasswordDto.html",[41,0.146,234,2.192]],["body/classes/CreateTokenRecoverPasswordDto.html",[3,0.281,4,0.281,5,0.245,7,0.395,14,0.687,17,1.797,18,0.022,20,0.687,24,0.482,31,0.395,40,0.281,41,0.245,50,0.018,51,0.018,164,2.018,197,1.238,200,1.342,219,2.783,222,1.655,225,4.345,234,3.682,235,3.167,236,3.399,237,3.019,238,4.345,239,3.973,240,4.128,241,3.301]],["title/classes/CreateUserDto.html",[41,0.146,242,2.192]],["body/classes/CreateUserDto.html",[3,0.239,4,0.239,5,0.208,7,0.336,14,0.831,17,1.799,18,0.022,20,0.797,24,0.559,31,0.336,40,0.239,41,0.221,50,0.017,51,0.017,197,1.052,200,1.212,201,3.154,211,2.322,219,2.56,220,4.266,222,1.406,225,4.721,229,3.154,242,3.324,243,3.106,244,4.464,245,2.939,246,4.032,247,5.043,248,2.021,249,2.276,250,4.119,251,4.119,252,4.119,253,4.119,254,4.545,255,4.119,256,3.508,257,4.119,258,4.119,259,4.119,260,3.508,261,4.119]],["title/interfaces/ILinkRepository.html",[147,2.192,262,1.875]],["body/interfaces/ILinkRepository.html",[3,0.175,4,0.175,5,0.153,7,0.247,8,1.568,14,0.813,18,0.022,20,0.775,22,2.147,23,1.426,24,0.543,25,1.514,27,2.415,31,0.411,40,0.175,50,0.013,51,0.013,110,3.44,135,2.311,137,1.475,138,2.936,147,2.696,166,2.398,202,1.614,211,2.637,223,2.064,262,1.614,263,2.064,264,5.737,265,2.285,266,2.149,267,3.687,268,3.687,269,3.687,270,3.687,271,3.687,272,2.949,273,3.687,274,3.687,275,3.687,276,3.687,277,2.696,278,2.581,279,4.074,280,3.687,281,3.03,282,2.581,283,3.687,284,3.809,285,2.581,286,3.687,287,2.581,288,3.687,289,3.03,290,3.687,291,2.581,292,2.949,293,2.581,294,2.382,295,3.687,296,3.03,297,3.687,298,2.581,299,3.687,300,2.581,301,3.687,302,3.809,303,3.146,304,3.03,305,2.581,306,2.581,307,2.581]],["title/interfaces/IUserRepository.html",[262,1.875,308,1.875]],["body/interfaces/IUserRepository.html",[3,0.142,4,0.142,5,0.124,7,0.2,8,1.344,14,0.846,18,0.023,20,0.784,22,2.159,23,1.434,24,0.546,25,1.522,27,2.445,31,0.364,40,0.142,50,0.012,51,0.012,137,1.365,139,2.168,164,1.527,166,2.327,229,2.654,233,1.853,234,3.103,235,1.22,236,1.309,239,2.311,245,2.655,248,1.701,249,1.719,262,1.309,263,1.673,265,1.853,266,1.842,272,2.527,277,2.311,278,2.093,279,4.101,285,2.093,287,2.093,291,2.093,292,2.527,293,2.093,294,2.563,298,2.093,300,2.093,308,1.977,309,4.626,310,3.161,311,3.161,312,4.243,313,3.161,314,3.161,315,3.161,316,3.809,317,3.161,318,3.161,319,3.161,320,3.161,321,3.161,322,3.161,323,3.809,324,3.809,325,3.161,326,3.161,327,2.457,328,3.161,329,3.161,330,2.457,331,3.161,332,2.093,333,2.457,334,3.161,335,2.457,336,3.161,337,2.457,338,3.161,339,2.457,340,3.161,341,2.457,342,3.161,343,2.457,344,3.161,345,2.457,346,2.093,347,2.457,348,2.093,349,3.046,350,1.411,351,1.853,352,2.093,353,2.093]],["title/interfaces/IUserTokenDto.html",[262,1.875,354,1.747]],["body/interfaces/IUserTokenDto.html",[3,0.299,4,0.299,5,0.26,7,0.42,14,0.817,18,0.022,24,0.5,40,0.299,50,0.019,51,0.019,200,1.394,227,3.515,248,2.316,262,2.749,263,3.515,294,2.772,354,3.048,355,2.964]],["title/injectables/JwtAuthGuard.html",[142,0.899,356,2.192]],["body/injectables/JwtAuthGuard.html",[3,0.307,4,0.307,5,0.268,18,0.022,31,0.508,34,1.435,40,0.307,41,0.219,50,0.019,51,0.019,142,1.593,143,2.306,185,3.61,356,3.885,357,3.302,358,4.515,359,5.301,360,4.515,361,5.301]],["title/injectables/JwtStrategy.html",[142,0.899,180,2.192]],["body/injectables/JwtStrategy.html",[3,0.233,4,0.233,5,0.203,7,0.328,8,1.904,10,2.251,18,0.023,20,0.611,22,1.296,23,0.861,24,0.328,25,0.914,27,1.457,31,0.538,34,1.089,40,0.233,41,0.166,45,2.287,50,0.016,51,0.016,106,2.311,129,2.148,142,1.343,143,1.751,145,2.717,159,1.868,164,1.374,174,2.506,180,3.274,185,2.741,186,2.506,187,3.427,188,3.034,189,3.427,192,3.034,248,1.374,279,3.019,294,1.645,354,1.998,357,3.646,360,3.427,362,3.427,363,5.257,364,4.024,365,5.257,366,4.024,367,5.855,368,4.024,369,5.257,370,3.427,371,4.024,372,4.024,373,3.034,374,3.964,375,4.024,376,2.506,377,4.024,378,4.024,379,4.024,380,4.024,381,4.024,382,4.024,383,4.024,384,5.257,385,4.024,386,3.427,387,4.024,388,4.024,389,4.024,390,3.427,391,4.024,392,4.024,393,4.024,394,4.024]],["title/classes/Link.html",[41,0.146,135,1.274]],["body/classes/Link.html",[3,0.242,4,0.242,5,0.211,7,0.34,14,0.824,18,0.022,20,0.814,23,1.275,24,0.571,25,1.43,31,0.34,40,0.242,41,0.173,50,0.017,51,0.017,135,1.95,137,1.515,164,1.839,167,3.712,197,1.067,200,1.223,201,3.176,202,3.176,203,4.06,204,4.06,205,3.423,206,3.423,211,2.343,223,2.845,303,3.354,395,3.558,396,4.495,397,4.177,398,4.177,399,4.177,400,4.177,401,4.177,402,4.177,403,4.177,404,4.177,405,4.177,406,4.177]],["title/classes/LinkInfos.html",[41,0.146,138,1.875]],["body/classes/LinkInfos.html",[3,0.285,4,0.285,5,0.248,7,0.4,14,0.693,16,3.998,18,0.022,20,0.746,24,0.523,31,0.4,40,0.285,41,0.203,50,0.019,51,0.019,135,2.517,138,3.177,164,2.036,167,3.998,197,1.255,200,1.354,407,5.684,408,4.186,409,4.915,410,4.915,411,4.915,412,4.915]],["title/injectables/LinkRepository.html",[63,1.747,142,0.899]],["body/injectables/LinkRepository.html",[3,0.121,4,0.121,5,0.105,7,0.17,8,1.186,9,3.258,10,2.699,14,0.768,18,0.023,20,0.722,22,2.002,23,1.348,24,0.506,25,1.411,27,2.215,31,0.429,34,0.565,40,0.121,41,0.086,43,1.52,45,2.397,48,2.705,50,0.01,51,0.01,63,1.626,76,1.199,110,3.589,129,1.338,135,2.173,137,1.431,138,2.646,142,0.836,143,0.909,145,1.52,158,1.881,159,2.648,166,2.293,201,2.808,202,2.152,203,1.422,205,1.199,206,1.199,211,2.293,223,1.422,266,1.626,267,2.789,268,3.44,269,2.789,270,2.789,271,2.789,272,2.23,273,2.789,274,2.789,275,2.789,276,2.789,279,3.888,280,2.789,282,1.779,283,1.779,284,3.448,286,2.789,288,2.789,290,2.789,292,2.23,294,2.453,295,2.789,297,2.789,299,2.789,301,2.789,302,3.448,303,2.516,305,1.779,306,1.779,307,1.779,396,1.575,413,1.779,414,2.089,415,4.692,416,4.039,417,2.089,418,3.275,419,3.275,420,2.089,421,2.089,422,2.089,423,2.089,424,2.089,425,2.089,426,2.089,427,2.089,428,2.089,429,2.089,430,2.089,431,2.089,432,1.779,433,1.575,434,2.089,435,2.089,436,2.089,437,2.089,438,3.275,439,4.039,440,2.089,441,1.881,442,2.089,443,1.779,444,1.779,445,1.779,446,2.089,447,4.039,448,3.275,449,1.779,450,2.089,451,3.275,452,2.089,453,2.089,454,2.089,455,2.789,456,2.089,457,2.089,458,2.089,459,2.089,460,2.089,461,2.089,462,2.089,463,2.089,464,2.089,465,2.089]],["title/controllers/LinksController.html",[0,1.875,466,2.397]],["body/controllers/LinksController.html",[0,0.888,2,0.888,3,0.097,4,0.097,5,0.084,7,0.136,8,0.99,9,3.224,10,2.671,14,0.778,17,1.81,18,0.023,20,0.692,22,1.918,23,1.273,24,0.456,25,1.352,27,2.156,28,3.173,31,0.456,32,1.257,33,3.344,34,0.451,38,0.774,40,0.097,41,0.069,42,1.136,43,0.774,45,2.591,48,2.591,50,0.008,51,0.008,83,0.958,94,1.136,126,4.236,135,0.99,137,0.912,159,2.335,166,2.667,196,3.485,235,1.995,266,1.725,277,1.039,294,2.563,350,0.958,354,1.995,355,0.958,356,1.039,357,1.039,376,1.039,441,1.57,466,1.862,467,1.42,468,1.42,469,1.668,470,2.328,471,2.328,472,2.959,473,2.328,474,2.734,475,2.959,476,2.328,477,2.959,478,2.328,479,2.328,480,2.959,481,2.959,482,1.42,483,1.668,484,1.668,485,5.221,486,1.668,487,1.668,488,1.42,489,2.734,490,1.668,491,1.668,492,1.668,493,2.734,494,1.668,495,3.422,496,2.737,497,4.058,498,4.018,499,5.252,500,4.018,501,4.018,502,3.422,503,1.42,504,1.668,505,1.668,506,1.668,507,1.668,508,1.668,509,1.668,510,4.882,511,3.133,512,1.668,513,2.734,514,1.668,515,1.42,516,1.668,517,1.668,518,1.668,519,1.42,520,1.668,521,1.668,522,1.668,523,1.668,524,1.42,525,1.668,526,1.668,527,1.42,528,3.133,529,1.668,530,1.668,531,1.668,532,1.668,533,2.734,534,1.668,535,3.777,536,1.42,537,1.42,538,1.42,539,1.42,540,1.668,541,5.072,542,4.631,543,1.42,544,2.328,545,1.42,546,1.42,547,1.257,548,1.995,549,1.42,550,1.136,551,1.668,552,1.668,553,3.474,554,1.668,555,2.328,556,2.619,557,2.328,558,1.668,559,1.668,560,1.668,561,1.668,562,2.959,563,1.668,564,4.631,565,1.668,566,2.959,567,1.668,568,1.668,569,1.668,570,1.668,571,1.668,572,1.668,573,1.668,574,1.668,575,1.668,576,1.668,577,1.668,578,1.668,579,1.668,580,1.668,581,1.668,582,1.668,583,1.668,584,1.668,585,1.668,586,1.668,587,1.668,588,1.668,589,1.668,590,1.668]],["title/injectables/LinksInterceptor.html",[142,0.899,550,2.397]],["body/injectables/LinksInterceptor.html",[3,0.231,4,0.231,5,0.201,7,0.325,8,1.892,10,2.241,18,0.023,20,0.607,22,1.683,23,1.117,24,0.426,25,1.186,27,1.444,31,0.504,34,1.079,40,0.231,41,0.165,43,1.851,45,1.735,48,1.735,50,0.016,51,0.016,129,1.63,137,1.186,142,1.335,143,1.735,145,2.425,152,2.483,154,2.483,158,2.29,159,2.705,168,2.716,172,2.716,173,2.716,174,3.255,279,3.001,308,3.296,309,2.716,374,3.94,441,2.29,497,3.396,550,3.559,555,3.396,556,3.007,557,3.396,591,3.396,592,5.829,593,3.988,594,3.988,595,4.451,596,3.988,597,6.186,598,5.829,599,6.186,600,3.988,601,4.451,602,5.226,603,3.988,604,3.396,605,1.851,606,3.396,607,3.396,608,3.007,609,3.988,610,3.396,611,3.988]],["title/modules/LinksModule.html",[52,1.531,60,2.192]],["body/modules/LinksModule.html",[2,2.784,3,0.231,4,0.231,5,0.201,18,0.023,23,1.323,31,0.566,34,1.079,40,0.231,41,0.165,50,0.016,51,0.016,52,2.274,54,1.98,55,2.594,60,4.33,63,3.271,64,3.001,65,2.29,66,2.29,68,3.255,69,2.483,75,3.007,76,2.29,88,3.559,90,3.255,97,3.559,99,3.396,101,3.255,103,3.007,134,3.007,135,1.444,136,4.664,137,0.905,138,2.124,139,1.735,466,3.97,548,3.784,549,3.396,605,3.058,612,3.396,613,3.396,614,3.988,615,3.988,616,3.988,617,3.988,618,3.988,619,3.396,620,3.988,621,3.988]],["title/injectables/LinksService.html",[142,0.899,548,2.021]],["body/injectables/LinksService.html",[3,0.06,4,0.06,5,0.053,7,0.085,8,0.663,9,3.029,10,2.55,14,0.777,18,0.023,20,0.632,22,1.752,23,1.164,24,0.426,25,1.235,26,4.103,27,1.934,28,2.787,31,0.405,34,0.282,38,0.483,40,0.06,41,0.043,43,1.137,45,2.324,48,2.85,50,0.006,51,0.006,63,0.517,83,1.693,106,3.067,122,3.004,126,4.05,129,2.702,135,1.85,137,1.057,142,0.467,143,0.453,145,0.849,146,0.886,147,1.836,149,1.558,151,3.852,152,0.648,154,1.14,155,3.125,157,0.886,158,2.438,159,2.763,162,3.401,163,3.401,165,2.086,166,2.099,168,2.891,172,2.891,173,2.891,174,3.389,175,3.2,176,3.2,177,3.707,196,2.899,202,1.972,204,1.668,205,1.406,206,0.598,260,2.086,266,0.908,277,1.14,294,2.033,302,2.223,308,1.571,309,0.709,350,0.598,354,2.31,355,0.598,374,0.785,376,0.648,441,0.598,443,4.634,444,4.713,445,4.108,455,3.153,470,1.558,471,1.558,472,2.086,473,1.558,475,2.086,476,1.558,477,1.558,478,1.558,479,1.558,480,1.558,481,2.086,482,1.558,488,1.558,503,1.558,511,2.487,515,1.558,524,1.558,527,1.558,528,2.487,544,1.558,545,0.886,546,0.886,547,0.785,548,1.051,556,2.532,595,2.086,605,0.483,606,0.886,608,0.785,610,1.558,619,0.886,622,0.886,623,1.83,624,1.83,625,1.83,626,2.511,627,1.04,628,1.04,629,1.04,630,1.04,631,1.04,632,1.04,633,1.83,634,1.04,635,1.04,636,1.04,637,1.83,638,1.04,639,1.04,640,1.04,641,3.702,642,1.04,643,1.04,644,1.83,645,1.04,646,1.83,647,1.04,648,1.04,649,1.04,650,1.04,651,1.04,652,3.358,653,0.886,654,0.785,655,0.785,656,1.04,657,3.702,658,2.449,659,1.83,660,1.83,661,4.245,662,2.948,663,2.948,664,3.994,665,3.994,666,2.449,667,2.449,668,2.449,669,3.615,670,2.449,671,2.449,672,1.83,673,2.449,674,2.449,675,2.449,676,1.83,677,1.83,678,1.83,679,1.83,680,1.83,681,1.83,682,1.04,683,1.83,684,1.04,685,1.04,686,1.04,687,1.04,688,1.04,689,1.04,690,1.668,691,1.04,692,1.83,693,1.04,694,1.04,695,1.04,696,1.04,697,1.04,698,1.83]],["title/classes/LoginUserDto.html",[41,0.146,699,2.192]],["body/classes/LoginUserDto.html",[3,0.283,4,0.283,5,0.247,7,0.398,14,0.774,17,1.806,18,0.022,20,0.69,24,0.484,31,0.398,40,0.283,41,0.246,50,0.018,51,0.018,197,1.248,200,1.349,219,2.617,220,4.361,222,1.669,243,3.685,248,2.186,249,2.462,254,5.061,256,4.163,699,3.701,700,5.454,701,4.887]],["title/modules/MailModule.html",[52,1.531,61,2.021]],["body/modules/MailModule.html",[3,0.23,4,0.23,5,0.201,10,1.53,18,0.023,31,0.547,34,1.077,38,2.422,40,0.23,41,0.165,50,0.016,51,0.016,52,2.533,54,1.975,55,2.59,61,3.854,64,2.997,65,2.285,66,2.285,68,3.25,69,3.25,73,3.388,74,3,84,3.388,85,3.388,106,2.285,120,3.388,122,2.285,125,3.388,129,1.626,137,0.903,152,2.478,702,3.388,703,3.388,704,3.388,705,4.047,706,3.978,707,5.218,708,3.978,709,3.978,710,3,711,5.218,712,3.978,713,5.822,714,3.978,715,3.978,716,3.978,717,3.978,718,3.978,719,5.218,720,3.978,721,3.978,722,3.978,723,3.978,724,3.978,725,3.978,726,3.978,727,3.978,728,3.978,729,3.388,730,3.388,731,3.978,732,3.978,733,3.978,734,3.978]],["title/injectables/MailService.html",[142,0.899,705,2.021]],["body/injectables/MailService.html",[3,0.209,4,0.209,5,0.183,7,0.295,8,1.773,10,2.464,14,0.82,18,0.023,20,0.645,22,1.788,23,1.329,24,0.452,25,1.261,27,1.773,31,0.399,34,0.979,38,1.679,40,0.209,41,0.15,42,2.464,48,2.131,50,0.015,51,0.015,142,1.251,143,1.574,145,1.679,236,1.927,248,2.237,249,1.391,294,2.432,601,4.171,705,2.813,710,2.728,729,4.171,730,4.171,735,3.081,736,4.897,737,4.897,738,3.617,739,6.409,740,3.617,741,4.897,742,5.95,743,3.617,744,4.897,745,4.052,746,3.617,747,4.897,748,4.171,749,4.897,750,4.897,751,3.693,752,4.897,753,3.617,754,4.897,755,3.617,756,4.897,757,4.897,758,4.897,759,4.897,760,4.897,761,4.897,762,4.897,763,4.897,764,3.617,765,3.617,766,3.617,767,3.617]],["title/classes/PaginationParamsDto.html",[41,0.146,511,2.192]],["body/classes/PaginationParamsDto.html",[3,0.261,4,0.261,5,0.228,7,0.367,17,1.718,18,0.023,20,0.657,24,0.543,25,1.471,31,0.461,40,0.261,41,0.256,50,0.018,51,0.018,110,4.207,111,4.264,197,1.152,200,1.284,211,2.962,216,4.658,222,1.54,284,4.658,441,3.248,511,3.522,751,4.264,768,5.262,769,3.842,770,4.816,771,4.51,772,4.51,773,4.51,774,4.51,775,6.178,776,4.51,777,3.842,778,4.51]],["title/classes/QueryUpdateRecoverPasswordDto.html",[41,0.146,779,2.397]],["body/classes/QueryUpdateRecoverPasswordDto.html",[3,0.281,4,0.281,5,0.245,7,0.395,14,0.772,17,1.797,18,0.022,20,0.687,24,0.482,31,0.395,40,0.281,41,0.245,50,0.018,51,0.018,197,1.238,200,1.342,219,2.783,222,1.655,235,3.167,236,3.399,237,3.019,240,4.128,241,3.301,248,2.178,779,4.027,780,5.434,781,4.811]],["title/classes/RecoverPasswordDto.html",[41,0.146,782,2.397]],["body/classes/RecoverPasswordDto.html",[3,0.297,4,0.297,5,0.259,7,0.418,14,0.711,17,1.559,18,0.022,20,0.596,24,0.418,31,0.418,40,0.297,41,0.253,50,0.019,51,0.019,197,1.31,200,1.389,219,2.672,222,1.752,237,3.195,241,3.494,248,2.232,782,4.167,783,5.211]],["title/classes/RefreshToken.html",[41,0.146,139,1.531]],["body/classes/RefreshToken.html",[3,0.259,4,0.259,5,0.225,7,0.364,14,0.75,18,0.022,20,0.789,24,0.553,25,1.541,31,0.364,40,0.259,41,0.185,50,0.017,51,0.017,137,1.541,139,2.445,164,2.203,197,1.14,200,1.276,201,3.276,211,2.445,228,4.636,229,3.276,244,4.636,349,4.188,784,5.87,785,3.802,786,4.465,787,4.465,788,4.465,789,4.465,790,4.465,791,4.465,792,4.465]],["title/classes/ResendEmailDto.html",[41,0.146,793,2.192]],["body/classes/ResendEmailDto.html",[3,0.297,4,0.297,5,0.259,7,0.418,14,0.711,17,1.559,18,0.022,20,0.596,24,0.418,31,0.418,40,0.297,41,0.253,50,0.019,51,0.019,197,1.31,200,1.389,219,2.672,222,1.752,248,2.232,793,3.811,794,5.211,795,3.868,796,4.37]],["title/classes/Result.html",[41,0.146,155,2.021]],["body/classes/Result.html",[3,0.262,4,0.262,5,0.228,7,0.368,9,3.33,14,0.753,18,0.022,20,0.776,22,1.456,23,0.967,24,0.544,25,1.027,40,0.262,41,0.187,50,0.018,51,0.018,145,2.629,155,3.253,166,2.905,197,1.155,200,1.286,303,4.038,390,5.522,797,3.851,798,6.676,799,6.676,800,4.522,801,4.522,802,4.522,803,4.522,804,4.522,805,4.522]],["title/classes/UpdateLinkDto.html",[41,0.146,528,2.192]],["body/classes/UpdateLinkDto.html",[3,0.267,4,0.267,5,0.232,7,0.375,14,0.815,17,1.741,18,0.022,20,0.758,23,1.334,24,0.532,25,1.301,31,0.375,40,0.267,41,0.237,50,0.018,51,0.018,197,1.176,199,3.472,200,1.301,202,3.323,205,3.582,206,3.582,216,4.702,220,4.247,222,1.572,528,3.568,806,5.716,807,4.605,808,5.729,809,4.605,810,4.605,811,4.605]],["title/classes/UpdatePasswordDto.html",[41,0.146,812,2.397]],["body/classes/UpdatePasswordDto.html",[3,0.297,4,0.297,5,0.259,7,0.418,14,0.711,17,1.559,18,0.022,20,0.596,24,0.418,31,0.418,40,0.297,41,0.253,50,0.019,51,0.019,197,1.31,200,1.389,219,2.672,222,1.752,237,3.195,241,3.494,249,2.514,812,4.167,813,5.211]],["title/classes/User.html",[41,0.146,137,0.799]],["body/classes/User.html",[3,0.255,4,0.255,5,0.222,7,0.358,14,0.83,18,0.022,20,0.807,24,0.566,25,1.535,40,0.255,41,0.182,50,0.017,51,0.017,137,1.264,164,1.9,197,1.123,200,1.264,201,3.253,211,2.421,238,4.159,239,3.803,244,4.604,245,3.031,246,4.159,248,2.085,249,2.348,814,3.745,815,4.397,816,4.397,817,4.397,818,4.397,819,4.397,820,4.397,821,4.397,822,4.397]],["title/injectables/UserRepository.html",[142,0.899,605,1.633]],["body/injectables/UserRepository.html",[3,0.1,4,0.1,5,0.087,7,0.141,8,1.021,9,3.299,10,2.733,14,0.826,18,0.023,20,0.741,22,2.036,23,1.352,24,0.515,25,1.436,27,2.29,28,1.502,31,0.416,34,0.469,40,0.1,41,0.072,43,1.309,45,2.523,48,2.751,50,0.009,51,0.009,76,0.995,129,1.152,137,1.343,139,1.968,142,0.72,143,0.754,145,1.309,154,1.079,158,1.619,159,1.309,164,1.217,166,1.788,177,1.756,201,2.839,229,2.839,233,1.306,234,2.56,235,0.86,236,0.923,238,1.92,239,2.56,245,2.646,246,1.179,248,1.656,249,1.58,266,1.4,272,1.92,279,3.912,292,1.92,294,2.608,308,1.502,310,2.401,311,2.401,312,3.5,313,2.401,314,2.401,315,2.401,316,2.401,317,3.037,318,3.037,319,2.401,320,2.401,321,2.401,322,2.401,323,3.037,324,3.037,325,2.401,326,2.401,328,2.401,329,2.401,331,2.401,332,2.401,334,1.475,336,1.475,338,2.401,340,2.401,342,2.401,344,2.401,346,1.475,348,1.475,349,2.799,350,0.995,351,1.306,352,1.475,353,1.475,415,4.354,432,1.475,433,1.306,605,1.309,607,1.475,669,2.401,823,1.475,824,1.732,825,3.566,826,1.732,827,2.401,828,1.732,829,1.475,830,1.732,831,1.732,832,1.732,833,1.732,834,1.732,835,1.732,836,1.732,837,1.732,838,1.732,839,1.732,840,1.732,841,1.732,842,1.732,843,1.732,844,1.732,845,1.732,846,1.732,847,1.732,848,1.732,849,1.732,850,1.732,851,1.732,852,4.524,853,1.732,854,1.732,855,1.732,856,4.524,857,1.732,858,1.732,859,1.732,860,1.732]],["title/controllers/UsersController.html",[0,1.875,861,2.397]],["body/controllers/UsersController.html",[0,0.995,2,0.995,3,0.108,4,0.108,5,0.094,7,0.152,8,1.086,9,3.219,10,2.667,14,0.806,17,1.802,18,0.023,20,0.689,22,1.91,23,1.268,24,0.473,25,1.346,27,2.148,28,3.16,31,0.513,32,1.409,33,2.26,34,0.506,38,0.867,40,0.108,41,0.077,42,1.272,43,0.867,45,2.58,48,2.185,50,0.009,51,0.009,83,1.073,94,1.272,126,4.283,137,1.068,139,2.046,159,1.742,166,2.84,224,2.676,226,1.272,235,2.493,236,2,242,2.676,245,1.488,248,1.467,249,1.652,266,1.488,277,1.164,294,2.156,350,1.722,351,2.831,354,1.864,355,1.073,356,1.164,357,1.164,376,2.338,468,1.591,485,4.006,496,1.272,510,4.006,519,1.591,535,4.493,537,1.591,538,3.197,539,1.591,541,4.006,542,4.818,543,1.591,547,1.409,562,2.553,564,2.553,566,2.553,699,2.676,745,2.042,779,2.926,781,1.409,782,2.926,793,3.285,812,2.926,861,2.042,862,1.591,863,1.868,864,2.998,865,2.553,866,2.553,867,3.197,868,3.197,869,3.197,870,3.197,871,3.197,872,2.553,873,1.868,874,1.868,875,1.868,876,1.868,877,1.868,878,1.868,879,1.591,880,2.998,881,1.868,882,1.868,883,2.998,884,1.868,885,1.868,886,1.868,887,1.868,888,1.868,889,2.998,890,1.868,891,1.868,892,2.998,893,2.998,894,1.868,895,1.868,896,2.998,897,1.868,898,1.868,899,2.926,900,2.998,901,1.868,902,1.591,903,2.926,904,1.868,905,1.868,906,2.553,907,2.998,908,1.591,909,2.156,910,1.591,911,1.868,912,1.868,913,2.553,914,1.591,915,1.868,916,1.868,917,1.868,918,1.868,919,1.868,920,1.868,921,1.868,922,1.868,923,1.868,924,1.868,925,1.868,926,1.868,927,1.868,928,1.868,929,1.868,930,1.868,931,1.868,932,1.868,933,1.868,934,1.868,935,1.868,936,1.868,937,1.868]],["title/modules/UsersModule.html",[52,1.531,62,2.192]],["body/modules/UsersModule.html",[2,2.792,3,0.232,4,0.232,5,0.202,18,0.023,23,1.121,31,0.567,34,1.084,40,0.232,41,0.166,50,0.016,51,0.016,52,2.28,54,1.989,55,2.602,61,3.789,62,4.333,64,3.01,65,2.301,66,2.301,68,3.264,69,3.264,75,3.02,76,2.301,90,3.264,101,3.264,103,3.02,134,3.02,136,3.952,137,0.909,139,1.743,182,3.412,183,2.728,186,2.495,190,3.412,191,3.02,192,3.02,193,3.412,194,3.412,195,3.412,605,3.062,861,3.979,909,3.789,910,3.412,938,3.412,939,4.006,940,3.412,941,4.006,942,4.006,943,4.006,944,3.412,945,4.006,946,4.006,947,4.006]],["title/injectables/UsersService.html",[142,0.899,909,2.021]],["body/injectables/UsersService.html",[3,0.076,4,0.076,5,0.066,7,0.107,8,0.81,9,2.953,10,2.446,14,0.799,18,0.023,20,0.63,22,1.702,23,1.13,24,0.418,25,1.2,27,1.914,28,2.733,31,0.475,34,0.355,38,0.609,40,0.076,41,0.054,43,1.357,45,1.836,48,2.901,50,0.007,51,0.007,83,1.984,106,2.423,109,1.905,111,1.687,122,3.478,126,4.238,129,2.774,137,1.164,139,0.973,142,0.571,143,0.571,145,1.038,151,4.566,152,0.817,154,0.817,155,3.513,158,2.587,159,2.709,164,0.448,166,0.571,168,2.64,172,2.64,173,2.353,174,3.73,175,2.605,176,2.605,177,3.878,183,0.894,224,1.821,226,0.894,229,0.699,235,0.651,242,2.151,245,1.452,248,1.62,249,1.124,266,1.11,294,1.195,308,1.84,350,1.285,354,1.452,355,0.754,373,0.989,376,1.393,386,1.118,441,2.423,536,1.118,605,1.357,608,0.989,626,2.942,653,1.118,690,3.068,699,2.151,705,2.587,745,3.068,793,0.817,827,1.905,829,1.118,865,1.905,866,1.905,867,1.905,868,1.905,869,1.905,870,1.905,871,1.905,872,1.905,879,1.905,902,1.118,906,1.905,908,1.118,909,1.285,913,1.118,914,1.118,944,1.118,948,1.118,949,3.454,950,1.312,951,4.505,952,1.312,953,1.312,954,1.312,955,1.312,956,1.312,957,1.312,958,1.312,959,1.312,960,1.312,961,1.312,962,2.237,963,1.312,964,2.237,965,1.312,966,1.312,967,1.312,968,2.237,969,1.312,970,2.924,971,1.312,972,1.312,973,1.687,974,1.312,975,1.312,976,1.905,977,1.118,978,1.118,979,1.312,980,1.312,981,1.312,982,2.237,983,1.312,984,2.237,985,2.237,986,2.237,987,1.312,988,1.312,989,1.312,990,1.312,991,2.237,992,1.312,993,1.312,994,1.312,995,1.312,996,2.924,997,1.312,998,3.876,999,1.312,1000,1.312,1001,1.312,1002,1.312,1003,1.312,1004,1.312,1005,1.312,1006,2.237,1007,2.237,1008,1.312,1009,1.312,1010,4.505,1011,1.312,1012,1.312,1013,2.237,1014,1.312,1015,1.312,1016,1.312,1017,1.312,1018,1.312,1019,1.312,1020,1.312,1021,1.312,1022,1.312,1023,1.312,1024,2.924,1025,2.924,1026,1.312,1027,1.312,1028,1.312,1029,1.312,1030,4.22,1031,3.594,1032,1.312,1033,1.312,1034,1.312,1035,1.312,1036,1.312,1037,1.312,1038,1.312,1039,2.237,1040,1.312,1041,1.312]],["title/classes/ValidateApiTokenDto.html",[41,0.146,903,2.397]],["body/classes/ValidateApiTokenDto.html",[3,0.295,4,0.295,5,0.257,7,0.416,14,0.708,17,1.55,18,0.022,20,0.593,24,0.416,31,0.416,40,0.295,41,0.252,50,0.019,51,0.019,197,1.303,200,1.384,219,2.666,222,1.741,227,3.474,245,3.238,496,4.153,903,4.153,1042,4.598,1043,5.101]],["title/classes/ValidateEmailDto.html",[41,0.146,899,2.397]],["body/classes/ValidateEmailDto.html",[3,0.297,4,0.297,5,0.259,7,0.418,14,0.711,17,1.559,18,0.022,20,0.596,24,0.418,31,0.418,40,0.297,41,0.253,50,0.019,51,0.019,197,1.31,200,1.389,219,2.672,222,1.752,745,4.453,795,3.868,796,4.37,899,4.167,1042,4.614]],["title/coverage.html",[1044,4.093]],["body/coverage.html",[0,2.655,1,2.015,5,0.149,6,2.52,18,0.023,24,0.241,35,1.699,41,0.288,50,0.013,51,0.013,63,1.469,88,2.015,90,1.843,97,2.015,101,1.843,129,1.209,135,1.071,137,0.672,138,1.576,139,1.287,142,1.649,144,2.52,147,1.843,155,1.699,180,1.843,186,1.843,196,1.843,198,2.52,199,3.209,224,1.843,225,3.395,226,2.015,227,3.395,234,1.843,235,1.469,236,2.267,237,3.395,242,1.843,243,3.209,249,1.138,262,2.655,264,2.52,265,3.209,308,1.576,309,2.015,354,1.469,355,1.699,356,1.843,357,2.651,358,2.52,362,2.52,395,2.52,407,2.52,408,2.52,413,2.52,466,2.015,467,2.52,496,2.015,511,1.843,528,1.843,548,1.699,550,2.015,591,2.52,605,1.373,622,2.52,654,2.231,655,2.231,690,4.967,699,1.843,700,2.52,705,1.699,735,2.52,768,2.52,769,2.52,779,2.015,780,2.52,781,2.231,782,2.015,783,2.52,784,2.52,785,2.52,793,1.843,794,2.52,795,3.209,797,2.52,806,2.52,812,2.015,813,2.52,814,2.52,823,2.52,861,2.015,862,2.52,899,2.015,903,2.015,909,1.699,948,2.52,973,2.231,1042,3.209,1044,2.52,1045,2.959,1046,2.959,1047,2.959,1048,6.458,1049,2.52,1050,4.984,1051,2.52,1052,6.458,1053,2.52,1054,5.775,1055,2.959,1056,2.959,1057,2.959,1058,2.959,1059,4.984,1060,2.959,1061,4.256,1062,4.256,1063,2.52,1064,2.52,1065,2.52,1066,2.959,1067,4.256,1068,5.775,1069,2.959,1070,2.959,1071,2.959,1072,2.52,1073,2.52,1074,2.52,1075,2.959,1076,2.52,1077,2.52,1078,2.52,1079,2.959,1080,2.959]],["title/dependencies.html",[55,2.102,1081,2.501]],["body/dependencies.html",[16,2.659,18,0.023,34,1.155,38,2.795,39,3.636,41,0.226,50,0.017,51,0.017,55,2.119,74,3.219,76,2.452,83,2.452,94,2.907,96,3.636,164,1.457,183,2.907,185,2.907,188,3.219,222,1.457,370,5.129,373,4.118,433,3.219,604,3.636,710,3.219,777,3.636,976,3.636,977,3.636,978,3.636,1082,4.269,1083,6.348,1084,4.269,1085,4.269,1086,4.269,1087,4.269,1088,4.269,1089,5.461,1090,4.269,1091,4.269,1092,4.269,1093,4.269,1094,4.269,1095,4.269,1096,4.269,1097,4.269,1098,4.269,1099,4.269,1100,4.269,1101,4.269,1102,4.269,1103,4.269,1104,4.269,1105,4.269,1106,4.269,1107,4.269,1108,4.269,1109,4.269,1110,4.269,1111,4.269,1112,4.269,1113,5.461,1114,4.269,1115,4.269,1116,4.269,1117,4.269,1118,4.269,1119,4.269]],["title/miscellaneous/functions.html",[1120,2,1121,3.605]],["body/miscellaneous/functions.html",[7,0.407,14,0.78,18,0.021,22,1.94,23,1.288,24,0.491,25,1.368,50,0.019,51,0.019,211,2.621,247,5.131,249,2.486,449,4.258,654,4.542,655,3.769,973,4.542,1049,4.258,1051,5.507,1076,5.131,1077,4.258,1078,5.131,1120,3.405,1121,4.258,1122,4.999,1123,4.999,1124,4.999,1125,4.999,1126,4.999]],["title/index.html",[7,0.239,1127,2.937,1128,2.937]],["body/index.html",[18,0.02,50,0.02,51,0.02,135,2.043,502,4.805,1129,5.642,1130,5.642]],["title/modules.html",[54,2.386]],["body/modules.html",[18,0.019,50,0.019,51,0.019,53,3.589,54,2.616,59,3.282,60,3.282,61,3.026,62,3.282,748,5.934,1131,6.968,1132,6.968,1133,6.968]],["title/overview.html",[1134,4.093]],["body/overview.html",[2,2.215,18,0.022,35,3.416,50,0.017,51,0.017,53,4.875,54,2.064,55,2.666,56,3.541,57,3.541,58,3.541,59,4.053,60,4.325,61,3.895,62,4.325,63,3.12,64,3.084,65,2.388,66,2.388,143,1.809,178,3.541,179,3.541,180,3.704,197,1.062,263,2.832,548,3.416,605,2.917,612,3.541,613,3.541,702,3.541,703,3.541,704,3.541,705,3.895,909,3.416,938,3.541,940,3.541,1031,3.541,1134,3.541,1135,4.158,1136,5.369,1137,4.158]],["title/properties.html",[200,0.961,1081,2.501]],["body/properties.html",[18,0.022,50,0.02,51,0.02,200,1.253,1138,5.518,1139,5.518,1140,5.518,1141,5.518,1142,5.518,1143,5.518]],["title/miscellaneous/variables.html",[1120,2,1144,3.605]],["body/miscellaneous/variables.html",[7,0.446,14,0.788,16,1.865,18,0.023,23,0.64,24,0.58,50,0.013,51,0.013,88,2.923,90,2.673,97,2.923,101,2.673,106,4.159,122,2.465,129,2.24,135,1.554,137,1.244,164,1.981,167,2.673,177,3.962,186,2.673,191,2.257,202,1.595,203,2.039,204,2.039,205,1.719,206,1.719,211,1.303,228,2.257,229,2.287,238,2.039,239,1.865,245,1.486,246,2.039,248,1.022,249,1.151,303,1.865,349,2.039,396,2.257,495,5.666,690,2.039,751,5.185,770,4.941,1053,2.55,1063,2.55,1064,3.656,1065,2.55,1072,2.55,1073,3.656,1074,2.55,1120,2.039,1144,2.55,1145,2.994,1146,2.994,1147,2.994,1148,2.994,1149,2.994,1150,2.994,1151,2.994,1152,5.48,1153,7.039,1154,5.017,1155,5.017,1156,5.017]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":690,"title":{},"body":{"injectables/LinksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1139,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":441,"title":{},"body":{"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"classes/PaginationParamsDto.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["1.2.11",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"classes/PaginationParamsDto.html":{},"injectables/UsersService.html":{}}}],["1000",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["14",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1137,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["2/14",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1016,"title":{},"body":{"injectables/UsersService.html":{}}}],["3",{"_index":1136,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["3.1.6",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":1135,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["5.11.97",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":660,"title":{},"body":{"injectables/LinksService.html":{}}}],["6.2.1",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["60s",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["7.2.0",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1031,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["9.0.2",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["_id",{"_index":201,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["acceptlanguageresolver",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["activate",{"_index":893,"title":{},"body":{"controllers/UsersController.html":{}}}],["activatelink",{"_index":470,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["activatelink(@param",{"_index":583,"title":{},"body":{"controllers/LinksController.html":{}}}],["activatelink(id",{"_index":482,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["active",{"_index":396,"title":{},"body":{"classes/Link.html":{},"injectables/LinkRepository.html":{},"miscellaneous/variables.html":{}}}],["adapter",{"_index":733,"title":{},"body":{"modules/MailModule.html":{}}}],["api",{"_index":496,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{},"classes/ValidateApiTokenDto.html":{},"coverage.html":{}}}],["api/:id/update",{"_index":533,"title":{},"body":{"controllers/LinksController.html":{}}}],["api/links",{"_index":469,"title":{},"body":{"controllers/LinksController.html":{}}}],["api/list",{"_index":513,"title":{},"body":{"controllers/LinksController.html":{}}}],["api/shorten",{"_index":493,"title":{},"body":{"controllers/LinksController.html":{}}}],["api/users",{"_index":863,"title":{},"body":{"controllers/UsersController.html":{}}}],["api_token",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUserRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"miscellaneous/variables.html":{}}}],["apitoken",{"_index":556,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{}}}],["app.controller",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":758,"title":{},"body":{"injectables/MailService.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":461,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ativação",{"_index":764,"title":{},"body":{"injectables/MailService.html":{}}}],["auth",{"_index":724,"title":{},"body":{"modules/MailModule.html":{}}}],["auth.guard",{"_index":543,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":358,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth/constants",{"_index":945,"title":{},"body":{"modules/UsersModule.html":{}}}],["authguard",{"_index":359,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":361,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1143,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":497,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{}}}],["authorization.split",{"_index":557,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{}}}],["automatically",{"_index":759,"title":{},"body":{"injectables/MailService.html":{}}}],["await",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["bcrypt",{"_index":976,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.password",{"_index":1008,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":1021,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(userdata.password",{"_index":990,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":535,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":303,"title":{},"body":{"interfaces/ILinkRepository.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"classes/Result.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["br",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["brackets",{"_index":762,"title":{},"body":{"injectables/MailService.html":{}}}],["break",{"_index":668,"title":{},"body":{"injectables/LinksService.html":{}}}],["browse",{"_index":1133,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1131,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":599,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["catch",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":41,"title":{"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"classes/LoginUserDto.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":197,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"classes/LoginUserDto.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"overview.html":{}}}],["cli.la",{"_index":729,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["clila_service_api",{"_index":1129,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_linksmodule",{"_index":612,"title":{},"body":{"modules/LinksModule.html":{},"overview.html":{}}}],["cluster_linksmodule_providers",{"_index":613,"title":{},"body":{"modules/LinksModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":702,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":703,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":704,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":938,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":939,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":940,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":745,"title":{},"body":{"injectables/MailService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateEmailDto.html":{}}}],["code_validation_email",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":718,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get(\"mail_transport",{"_index":720,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":722,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":727,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":725,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":713,"title":{},"body":{"modules/MailModule.html":{}}}],["confirmation",{"_index":975,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmation_password",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"classes/Result.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(linkmodel",{"_index":414,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["constructor(linksrepository",{"_index":146,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["constructor(mailerservice",{"_index":738,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(message",{"_index":800,"title":{},"body":{"classes/Result.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/LinksController.html":{},"injectables/MailService.html":{},"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":824,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":950,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersrepository",{"_index":593,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["content",{"_index":763,"title":{},"body":{"injectables/MailService.html":{}}}],["context",{"_index":601,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/MailService.html":{}}}],["context.switchtohttp().getrequest",{"_index":609,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/links",{"_index":552,"title":{},"body":{"controllers/LinksController.html":{}}}],["controller('api/users",{"_index":915,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LinksController.html":{},"modules/LinksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/links/links.controller",{"_index":618,"title":{},"body":{"modules/LinksModule.html":{}}}],["controllers/users/users.controller",{"_index":943,"title":{},"body":{"modules/UsersModule.html":{}}}],["cookieresolver",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["cookieresolver(['lang",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":447,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["coverage",{"_index":1044,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":266,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":916,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(data",{"_index":277,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{}}}],["create(linkdata",{"_index":419,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["create(userdata",{"_index":827,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["create_at",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":228,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"classes/RefreshToken.html":{},"miscellaneous/variables.html":{}}}],["createlink",{"_index":673,"title":{},"body":{"injectables/LinksService.html":{}}}],["createlink._id",{"_index":675,"title":{},"body":{"injectables/LinksService.html":{}}}],["createlinkdto",{"_index":196,"title":{"classes/CreateLinkDto.html":{}},"body":{"classes/CreateLinkDto.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"coverage.html":{}}}],["createlinkinfo",{"_index":267,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["createlinkinfo(linkinfodata",{"_index":280,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["createrefreshtokendto",{"_index":224,"title":{"classes/CreateRefreshTokenDto.html":{}},"body":{"classes/CreateRefreshTokenDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createrefreshtokens",{"_index":310,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["createrefreshtokens(data",{"_index":325,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["createshortlandpage",{"_index":471,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["createshortlandpage(@body",{"_index":577,"title":{},"body":{"controllers/LinksController.html":{}}}],["createshortlandpage(data",{"_index":488,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["createshortlinkapitoken",{"_index":472,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["createshortlinkapitoken(data",{"_index":631,"title":{},"body":{"injectables/LinksService.html":{}}}],["createshortlinkapitoken(request",{"_index":491,"title":{},"body":{"controllers/LinksController.html":{}}}],["createtokenrecoverpassworddto",{"_index":234,"title":{"classes/CreateTokenRecoverPasswordDto.html":{}},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["createuserdto",{"_index":242,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["curly",{"_index":761,"title":{},"body":{"injectables/MailService.html":{}}}],["currentpage",{"_index":453,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["custom",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"classes/Result.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data.code",{"_index":935,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.create_at",{"_index":671,"title":{},"body":{"injectables/LinksService.html":{}}}],["data.date_generate_recover_password_token",{"_index":858,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.hash_link",{"_index":445,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/LinksService.html":{}}}],["data.name",{"_index":442,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["data.original_link",{"_index":657,"title":{},"body":{"injectables/LinksService.html":{}}}],["data.password",{"_index":933,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.recover_password_token",{"_index":857,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.short_link",{"_index":444,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/LinksService.html":{}}}],["data.surname",{"_index":443,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/LinksService.html":{}}}],["data.user",{"_index":672,"title":{},"body":{"injectables/LinksService.html":{}}}],["date",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["date()).tostring",{"_index":993,"title":{},"body":{"injectables/UsersService.html":{}}}],["date(date.now",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["date(payload.exp",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["date_generate_recover_password_token",{"_index":238,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":754,"title":{},"body":{"injectables/MailService.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"controllers/LinksController.html":{},"classes/LoginUserDto.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/ResendEmailDto.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"controllers/UsersController.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["default",{"_index":751,"title":{},"body":{"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":728,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["delete",{"_index":536,"title":{},"body":{"controllers/LinksController.html":{},"injectables/UsersService.html":{}}}],["delete(':id",{"_index":585,"title":{},"body":{"controllers/LinksController.html":{}}}],["deleterefreshtokenbyid",{"_index":311,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["deleterefreshtokenbyid(id",{"_index":326,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1140,"title":{},"body":{"properties.html":{}}}],["dev",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["differenceinmonths",{"_index":981,"title":{},"body":{"injectables/UsersService.html":{}}}],["dir",{"_index":731,"title":{},"body":{"modules/MailModule.html":{}}}],["div",{"_index":450,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["documentation",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["done(null",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["downloadlinks",{"_index":623,"title":{},"body":{"injectables/LinksService.html":{}}}],["downloadlinks(user",{"_index":633,"title":{},"body":{"injectables/LinksService.html":{}}}],["dtos/create",{"_index":350,"title":{},"body":{"interfaces/IUserRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/login",{"_index":908,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/pagination",{"_index":545,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["dtos/query",{"_index":912,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/recover",{"_index":911,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/resend",{"_index":914,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/update",{"_index":547,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{}}}],["dtos/user",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dtos/validate",{"_index":907,"title":{},"body":{"controllers/UsersController.html":{}}}],["e",{"_index":765,"title":{},"body":{"injectables/MailService.html":{}}}],["e4ef52222d2ab38207ac69539c350c943550bddba9e09c691d84985d765e3f53",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ejs",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/ResendEmailDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email.dto",{"_index":913,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email.dto.ts",{"_index":795,"title":{},"body":{"classes/ResendEmailDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:5",{"_index":796,"title":{},"body":{"classes/ResendEmailDto.html":{},"classes/ValidateEmailDto.html":{}}}],["emailexists",{"_index":982,"title":{},"body":{"injectables/UsersService.html":{}}}],["en",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["enabled",{"_index":715,"title":{},"body":{"modules/MailModule.html":{}}}],["err",{"_index":1002,"title":{},"body":{"injectables/UsersService.html":{}}}],["err.message",{"_index":1004,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["errors",{"_index":798,"title":{},"body":{"classes/Result.html":{}}}],["executioncontext",{"_index":597,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["expiresat",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["exports",{"_index":707,"title":{},"body":{"modules/MailModule.html":{}}}],["express",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":360,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extension",{"_index":757,"title":{},"body":{"injectables/MailService.html":{}}}],["extractjwt",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fallbacklanguage",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["fallbacks",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{}}}],["filling",{"_index":760,"title":{},"body":{"injectables/MailService.html":{}}}],["find",{"_index":457,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["findall",{"_index":312,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findallbyuser",{"_index":268,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findallbyuser(user",{"_index":283,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findallbyuserdownload",{"_index":269,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findallbyuserdownload(user",{"_index":286,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findalllinkinfosbylink",{"_index":270,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findalllinkinfosbylink(link",{"_index":288,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findbyapitoken",{"_index":313,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyapitoken(api_token",{"_index":328,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyapitokenpanel",{"_index":314,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyapitokenpanel(api_token",{"_index":329,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyemail",{"_index":315,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyemail(email",{"_index":331,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyhash",{"_index":271,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findbyhash(hash_link",{"_index":290,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["findbyid",{"_index":272,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LinkRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid(id",{"_index":292,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/LinkRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyrecoverpasswordtoken",{"_index":316,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyrecoverpasswordtoken(recover_password_token",{"_index":332,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyrefreshtoken",{"_index":317,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyrefreshtoken(refresh_token",{"_index":334,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findrefreshtokenbyuser",{"_index":318,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["findrefreshtokenbyuser(user",{"_index":336,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["fns",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["forbiddenexception",{"_index":652,"title":{},"body":{"injectables/LinksService.html":{}}}],["formatlink",{"_index":624,"title":{},"body":{"injectables/LinksService.html":{}}}],["formatlink(link",{"_index":635,"title":{},"body":{"injectables/LinksService.html":{}}}],["formatsurname",{"_index":625,"title":{},"body":{"injectables/LinksService.html":{}}}],["formatsurname(surname",{"_index":637,"title":{},"body":{"injectables/LinksService.html":{}}}],["function",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1121,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatecodeemail",{"_index":949,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatehash",{"_index":654,"title":{},"body":{"injectables/LinksService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatehash(6).tostring",{"_index":666,"title":{},"body":{"injectables/LinksService.html":{}}}],["generatehash(length",{"_index":1125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["get(':hash",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":572,"title":{},"body":{"controllers/LinksController.html":{}}}],["get(':id/infos",{"_index":588,"title":{},"body":{"controllers/LinksController.html":{}}}],["get('download",{"_index":569,"title":{},"body":{"controllers/LinksController.html":{}}}],["get('token",{"_index":554,"title":{},"body":{"controllers/LinksController.html":{}}}],["get('validate",{"_index":926,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":1127,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":864,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@req",{"_index":920,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(request",{"_index":874,"title":{},"body":{"controllers/UsersController.html":{}}}],["globally",{"_index":716,"title":{},"body":{"modules/MailModule.html":{}}}],["handlebars",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":711,"title":{},"body":{"modules/MailModule.html":{}}}],["hash",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["hash.ts",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash_link",{"_index":202,"title":{},"body":{"classes/CreateLinkDto.html":{},"interfaces/ILinkRepository.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"injectables/LinksService.html":{},"classes/UpdateLinkDto.html":{},"miscellaneous/variables.html":{}}}],["hbs",{"_index":756,"title":{},"body":{"injectables/MailService.html":{}}}],["headerresolver",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["headerresolver(['x",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["headers",{"_index":555,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{}}}],["host",{"_index":721,"title":{},"body":{"modules/MailModule.html":{}}}],["http://localhost:3000",{"_index":664,"title":{},"body":{"injectables/LinksService.html":{}}}],["https",{"_index":698,"title":{},"body":{"injectables/LinksService.html":{}}}],["https://cli.la",{"_index":665,"title":{},"body":{"injectables/LinksService.html":{}}}],["i18n",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["i18njsonparser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nlang",{"_index":542,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["i18nmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nservice",{"_index":626,"title":{},"body":{"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":294,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ilinkrepository",{"_index":147,"title":{"interfaces/ILinkRepository.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"injectables/LinksService.html":{},"coverage.html":{}}}],["implements",{"_index":607,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/UserRepository.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}}}],["inactivatelink",{"_index":473,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["inactivatelink(@param",{"_index":580,"title":{},"body":{"controllers/LinksController.html":{}}}],["inactivatelink(id",{"_index":503,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["inc",{"_index":440,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["infos.model",{"_index":306,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["infos.model.ts",{"_index":408,"title":{},"body":{"classes/LinkInfos.html":{},"coverage.html":{}}}],["infos.model.ts:4",{"_index":410,"title":{},"body":{"classes/LinkInfos.html":{}}}],["infos.model.ts:6",{"_index":411,"title":{},"body":{"classes/LinkInfos.html":{}}}],["infos.model.ts:8",{"_index":409,"title":{},"body":{"classes/LinkInfos.html":{}}}],["infos.schema",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{}}}],["infos.schema.ts",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["inject(linkrepository",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["inject(userrepository",{"_index":608,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":142,"title":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":432,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel('link",{"_index":434,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["injectmodel('linkinfos",{"_index":435,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["injectmodel('refreshtoken",{"_index":847,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel('user",{"_index":846,"title":{},"body":{"injectables/UserRepository.html":{}}}],["intercept",{"_index":592,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["intercept(context",{"_index":596,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["interface",{"_index":262,"title":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{}},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":263,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"overview.html":{}}}],["invalidatetoken",{"_index":865,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["invalidatetoken(@i18nlang",{"_index":924,"title":{},"body":{"controllers/UsersController.html":{}}}],["invalidatetoken(lang",{"_index":876,"title":{},"body":{"controllers/UsersController.html":{}}}],["invalidatetoken(user",{"_index":955,"title":{},"body":{"injectables/UsersService.html":{}}}],["ip",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/LinkInfos.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["isafter",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isafter(date.now",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isglobal",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["ismatchpassword",{"_index":1007,"title":{},"body":{"injectables/UsersService.html":{}}}],["isnotempty",{"_index":219,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/ResendEmailDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["isnotempty()@isstring",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@isurl()@isstring",{"_index":213,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["isnotempty()@minlength(6)@isstring",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":775,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["isoptional",{"_index":216,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/PaginationParamsDto.html":{},"classes/UpdateLinkDto.html":{}}}],["isoptional()@type(undefined)@isnumber",{"_index":773,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["isoptional()@type(undefined)@isnumber()@min(1",{"_index":771,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["isstring",{"_index":220,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateLinkDto.html":{}}}],["isstring()@isoptional",{"_index":808,"title":{},"body":{"classes/UpdateLinkDto.html":{}}}],["isurl",{"_index":221,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["iuserrepository",{"_index":308,"title":{"interfaces/IUserRepository.html":{}},"body":{"interfaces/IUserRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iusertokendto",{"_index":354,"title":{"interfaces/IUserTokenDto.html":{}},"body":{"interfaces/IUserTokenDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["join",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["join(__dirname",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":356,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["jwtfromrequest",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtservice",{"_index":951,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":180,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["l",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["lang",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["length",{"_index":449,"title":{},"body":{"injectables/LinkRepository.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":1141,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{},"classes/PaginationParamsDto.html":{}}}],["limit(limit",{"_index":458,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["link",{"_index":135,"title":{"classes/Link.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["link.active",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["link.dto",{"_index":544,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["link.dto.ts",{"_index":199,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/UpdateLinkDto.html":{},"coverage.html":{}}}],["link.dto.ts:10",{"_index":809,"title":{},"body":{"classes/UpdateLinkDto.html":{}}}],["link.dto.ts:11",{"_index":209,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:12",{"_index":810,"title":{},"body":{"classes/UpdateLinkDto.html":{}}}],["link.dto.ts:13",{"_index":212,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:14",{"_index":807,"title":{},"body":{"classes/UpdateLinkDto.html":{}}}],["link.dto.ts:17",{"_index":217,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:19",{"_index":218,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:24",{"_index":214,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:26",{"_index":208,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:5",{"_index":207,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:6",{"_index":811,"title":{},"body":{"classes/UpdateLinkDto.html":{}}}],["link.dto.ts:7",{"_index":210,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.dto.ts:9",{"_index":215,"title":{},"body":{"classes/CreateLinkDto.html":{}}}],["link.indexof('http",{"_index":697,"title":{},"body":{"injectables/LinksService.html":{}}}],["link.indexof('https",{"_index":692,"title":{},"body":{"injectables/LinksService.html":{}}}],["link.model",{"_index":412,"title":{},"body":{"classes/LinkInfos.html":{}}}],["link.replace('http",{"_index":691,"title":{},"body":{"injectables/LinksService.html":{}}}],["link.replace('https",{"_index":693,"title":{},"body":{"injectables/LinksService.html":{}}}],["link.replace(regex",{"_index":696,"title":{},"body":{"injectables/LinksService.html":{}}}],["link.save",{"_index":437,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["linkdata",{"_index":421,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["linkinfodata",{"_index":282,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["linkinfos",{"_index":138,"title":{"classes/LinkInfos.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ILinkRepository.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"modules/LinksModule.html":{},"coverage.html":{}}}],["linkinfos.save",{"_index":464,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["linkinfosmodel",{"_index":416,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["linkinfosschema",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["linkmodel",{"_index":418,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["linkrepository",{"_index":63,"title":{"injectables/LinkRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LinkRepository.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"coverage.html":{},"overview.html":{}}}],["links",{"_index":455,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/LinksService.html":{}}}],["linkschema",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["linkscontroller",{"_index":466,"title":{"controllers/LinksController.html":{}},"body":{"controllers/LinksController.html":{},"modules/LinksModule.html":{},"coverage.html":{}}}],["linksdownload",{"_index":474,"title":{},"body":{"controllers/LinksController.html":{}}}],["linksdownload(@req",{"_index":570,"title":{},"body":{"controllers/LinksController.html":{}}}],["linksdownload(request",{"_index":506,"title":{},"body":{"controllers/LinksController.html":{}}}],["linksinterceptor",{"_index":550,"title":{"injectables/LinksInterceptor.html":{}},"body":{"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"coverage.html":{}}}],["linksmodule",{"_index":60,"title":{"modules/LinksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules.html":{},"overview.html":{}}}],["linksrepository",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["linksservice",{"_index":548,"title":{"injectables/LinksService.html":{}},"body":{"controllers/LinksController.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"coverage.html":{},"overview.html":{}}}],["listalllinksapitoken",{"_index":475,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["listalllinksapitoken(apitoken",{"_index":640,"title":{},"body":{"injectables/LinksService.html":{}}}],["listalllinksapitoken(request",{"_index":509,"title":{},"body":{"controllers/LinksController.html":{}}}],["listlinksinfos",{"_index":476,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["listlinksinfos(@param",{"_index":589,"title":{},"body":{"controllers/LinksController.html":{}}}],["listlinksinfos(id",{"_index":515,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["listlinksuser",{"_index":477,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["listlinksuser(request",{"_index":518,"title":{},"body":{"controllers/LinksController.html":{}}}],["listlinksuser(user",{"_index":644,"title":{},"body":{"injectables/LinksService.html":{}}}],["listlinkuser",{"_index":478,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["listlinkuser(@req",{"_index":573,"title":{},"body":{"controllers/LinksController.html":{}}}],["listlinkuser(id",{"_index":646,"title":{},"body":{"injectables/LinksService.html":{}}}],["listlinkuser(request",{"_index":521,"title":{},"body":{"controllers/LinksController.html":{}}}],["local",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["locale",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":866,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login(@body",{"_index":918,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(data",{"_index":879,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["loginuserdto",{"_index":699,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["mail",{"_index":766,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":708,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":946,"title":{},"body":{"modules/UsersModule.html":{}}}],["mailermodule",{"_index":709,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":714,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":739,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":61,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":705,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(count",{"_index":452,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["math.floor(math.random",{"_index":1030,"title":{},"body":{"injectables/UsersService.html":{}}}],["math.max(1",{"_index":454,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["md5",{"_index":977,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["md5.hashstr(userdata",{"_index":992,"title":{},"body":{"injectables/UsersService.html":{}}}],["md5/dist/md5",{"_index":979,"title":{},"body":{"injectables/UsersService.html":{}}}],["message",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Result.html":{}}}],["metadata",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":776,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["min(1",{"_index":778,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["minlength",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LinksService.html":{}}}],["minlength(6",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1120,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":415,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/UserRepository.html":{}}}],["models/link",{"_index":305,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["models/link.model",{"_index":307,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["models/refresh",{"_index":352,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["models/users.model",{"_index":233,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/links/links.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/links/repositories/implementations/link.repository",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["modules/links/repositories/link",{"_index":153,"title":{},"body":{"injectables/AppService.html":{}}}],["modules/links/schemas/link",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/links/schemas/link.schema",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mail/mail.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":710,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":712,"title":{},"body":{"modules/MailModule.html":{}}}],["modules/users/schemas/refresh",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/schemas/user.schema",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["mongoose",{"_index":433,"title":{},"body":{"injectables/LinkRepository.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(process.env.database_mongodb_connection_string",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":602,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["nestjs",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/LinkRepository.html":{},"modules/LinksModule.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":598,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["next.handle",{"_index":611,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["nodemailer",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":211,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numbers_clicks",{"_index":203,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":603,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["obtained",{"_index":498,"title":{},"body":{"controllers/LinksController.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshToken.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["original_link",{"_index":204,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/Link.html":{},"injectables/LinksService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":750,"title":{},"body":{"injectables/MailService.html":{}}}],["overview",{"_index":1134,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1081,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":284,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{},"classes/PaginationParamsDto.html":{}}}],["paginationparamsdto",{"_index":511,"title":{"classes/PaginationParamsDto.html":{}},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{},"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["panel",{"_index":499,"title":{},"body":{"controllers/LinksController.html":{}}}],["param",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["param('hash",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["param('id",{"_index":562,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"classes/Result.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":641,"title":{},"body":{"injectables/LinksService.html":{}}}],["params.dto",{"_index":546,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["params.dto.ts",{"_index":769,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["params.dto.ts:14",{"_index":772,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.dto.ts:8",{"_index":774,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.limit",{"_index":677,"title":{},"body":{"injectables/LinksService.html":{}}}],["params.page",{"_index":678,"title":{},"body":{"injectables/LinksService.html":{}}}],["parser",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["parseroptions",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["pass",{"_index":726,"title":{},"body":{"modules/MailModule.html":{}}}],["passport",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUserRepository.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":351,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{}}}],["password.dto.ts",{"_index":237,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:5",{"_index":241,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["password.dto.ts:8",{"_index":240,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{}}}],["patch",{"_index":537,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":575,"title":{},"body":{"controllers/LinksController.html":{}}}],["patch(':id/activate",{"_index":582,"title":{},"body":{"controllers/LinksController.html":{}}}],["patch(':id/email",{"_index":892,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/inactivate",{"_index":579,"title":{},"body":{"controllers/LinksController.html":{}}}],["patch(':id/validate",{"_index":900,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('invalidate",{"_index":923,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('refresh",{"_index":921,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('token",{"_index":561,"title":{},"body":{"controllers/LinksController.html":{}}}],["path",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["payload",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["post",{"_index":538,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":880,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('recover",{"_index":883,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('resend",{"_index":889,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('shorten",{"_index":565,"title":{},"body":{"controllers/LinksController.html":{}}}],["post('shorten/landpage",{"_index":489,"title":{},"body":{"controllers/LinksController.html":{}}}],["post('token",{"_index":559,"title":{},"body":{"controllers/LinksController.html":{}}}],["post('update",{"_index":896,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":468,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["process.env.node_env",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{}}}],["promise",{"_index":279,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/UserRepository.html":{}}}],["properties",{"_index":200,"title":{"properties.html":{}},"body":{"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUserTokenDto.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"classes/LoginUserDto.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"properties.html":{}}}],["provide",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}}}],["pt",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"classes/Result.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pug",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":510,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["query.email",{"_index":932,"title":{},"body":{"controllers/UsersController.html":{}}}],["query.token",{"_index":931,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryresolver",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["queryupdaterecoverpassworddto",{"_index":779,"title":{"classes/QueryUpdateRecoverPasswordDto.html":{}},"body":{"classes/QueryUpdateRecoverPasswordDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["realip",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["recover",{"_index":236,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"interfaces/IUserRepository.html":{},"injectables/MailService.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["recover_password_token",{"_index":239,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"interfaces/IUserRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["recoverpassword",{"_index":867,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["recoverpassword(email",{"_index":958,"title":{},"body":{"injectables/UsersService.html":{}}}],["recoverpassword(lang",{"_index":882,"title":{},"body":{"controllers/UsersController.html":{}}}],["recoverpassworddto",{"_index":782,"title":{"classes/RecoverPasswordDto.html":{}},"body":{"classes/RecoverPasswordDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["redefinição",{"_index":753,"title":{},"body":{"injectables/MailService.html":{}}}],["redirectoriginallink",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["redirectoriginallink(hash",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["redirecttosite",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["redirecttosite(@res",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["redirecttosite(res",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["ref",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":226,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["refresh_token",{"_index":229,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUserRepository.html":{},"classes/RefreshToken.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":139,"title":{"classes/RefreshToken.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IUserRepository.html":{},"modules/LinksModule.html":{},"classes/RefreshToken.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["refreshtoken(refresh_token",{"_index":960,"title":{},"body":{"injectables/UsersService.html":{}}}],["refreshtoken(refreshtoken",{"_index":885,"title":{},"body":{"controllers/UsersController.html":{}}}],["refreshtoken.save",{"_index":851,"title":{},"body":{"injectables/UserRepository.html":{}}}],["refreshtokenmodel",{"_index":825,"title":{},"body":{"injectables/UserRepository.html":{}}}],["refreshtokenschema",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reftokens",{"_index":1013,"title":{},"body":{"injectables/UsersService.html":{}}}],["regex",{"_index":694,"title":{},"body":{"injectables/LinksService.html":{}}}],["regexp('^(http|https",{"_index":695,"title":{},"body":{"injectables/LinksService.html":{}}}],["removelink",{"_index":479,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["removelink(@param",{"_index":586,"title":{},"body":{"controllers/LinksController.html":{}}}],["removelink(id",{"_index":524,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["removelinkbyid",{"_index":273,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["removelinkbyid(id",{"_index":295,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["repositories/implementation/user.repository",{"_index":944,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["repositories/implementations/link.repository",{"_index":619,"title":{},"body":{"modules/LinksModule.html":{},"injectables/LinksService.html":{}}}],["repositories/link",{"_index":656,"title":{},"body":{"injectables/LinksService.html":{}}}],["repositories/user",{"_index":972,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository.interface",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["repository.interface.ts",{"_index":265,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"coverage.html":{}}}],["repository.interface.ts:10",{"_index":300,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:11",{"_index":285,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:12",{"_index":287,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:13",{"_index":304,"title":{},"body":{"interfaces/ILinkRepository.html":{}}}],["repository.interface.ts:14",{"_index":296,"title":{},"body":{"interfaces/ILinkRepository.html":{}}}],["repository.interface.ts:15",{"_index":281,"title":{},"body":{"interfaces/ILinkRepository.html":{}}}],["repository.interface.ts:16",{"_index":289,"title":{},"body":{"interfaces/ILinkRepository.html":{}}}],["repository.interface.ts:17",{"_index":339,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:18",{"_index":345,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:19",{"_index":347,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:23",{"_index":335,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:24",{"_index":333,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:27",{"_index":330,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:28",{"_index":337,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:29",{"_index":341,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:30",{"_index":327,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:31",{"_index":343,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:6",{"_index":278,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:7",{"_index":291,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:8",{"_index":293,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:9",{"_index":298,"title":{},"body":{"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{}}}],["req",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":485,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":566,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["required",{"_index":495,"title":{},"body":{"controllers/LinksController.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["res.redirect('https://site.cli.la",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["res.redirect(`${link.original_link",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["resendcodeemail",{"_index":868,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["resendcodeemail(email",{"_index":962,"title":{},"body":{"injectables/UsersService.html":{}}}],["resendcodeemail(lang",{"_index":888,"title":{},"body":{"controllers/UsersController.html":{}}}],["resendemaildto",{"_index":793,"title":{"classes/ResendEmailDto.html":{}},"body":{"classes/ResendEmailDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolvers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["result",{"_index":155,"title":{"classes/Result.html":{}},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{},"classes/Result.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["result('error",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/MailService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":500,"title":{},"body":{"controllers/LinksController.html":{}}}],["rxjs",{"_index":604,"title":{},"body":{"injectables/LinksInterceptor.html":{},"dependencies.html":{}}}],["schema",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{}}}],["schemas/link",{"_index":620,"title":{},"body":{"modules/LinksModule.html":{}}}],["schemas/link.schema",{"_index":621,"title":{},"body":{"modules/LinksModule.html":{}}}],["schemas/refresh",{"_index":947,"title":{},"body":{"modules/UsersModule.html":{}}}],["schemas/user.schema",{"_index":942,"title":{},"body":{"modules/UsersModule.html":{}}}],["secret",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":723,"title":{},"body":{"modules/MailModule.html":{}}}],["sendrecoverpassword",{"_index":736,"title":{},"body":{"injectables/MailService.html":{}}}],["sendrecoverpassword(email",{"_index":741,"title":{},"body":{"injectables/MailService.html":{}}}],["sendvalidationemail",{"_index":737,"title":{},"body":{"injectables/MailService.html":{}}}],["sendvalidationemail(email",{"_index":744,"title":{},"body":{"injectables/MailService.html":{}}}],["senha",{"_index":755,"title":{},"body":{"injectables/MailService.html":{}}}],["service",{"_index":502,"title":{},"body":{"controllers/LinksController.html":{},"index.html":{}}}],["service/links/links.service",{"_index":549,"title":{},"body":{"controllers/LinksController.html":{},"modules/LinksModule.html":{}}}],["services/users/users.service",{"_index":910,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["setapitoken",{"_index":319,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setapitoken(id",{"_index":338,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setclicklink",{"_index":274,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["setclicklink(id",{"_index":297,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["setcodeactivationemail",{"_index":320,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setcodeactivationemail(id",{"_index":340,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setemail",{"_index":321,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setemail(id",{"_index":342,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setnamesurname",{"_index":275,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["setnamesurname(id",{"_index":299,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["setpassword",{"_index":322,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setpassword(id",{"_index":344,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setrecoverpasswordtoken",{"_index":323,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setrecoverpasswordtoken(id",{"_index":346,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setrefreshtoken",{"_index":324,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setrefreshtoken(id",{"_index":348,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["setstatuslink",{"_index":276,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["setstatuslink(id",{"_index":301,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{}}}],["shared/interceptors/links.interceptor",{"_index":551,"title":{},"body":{"controllers/LinksController.html":{}}}],["shared/models/result",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["short_link",{"_index":205,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"injectables/LinksService.html":{},"classes/UpdateLinkDto.html":{},"miscellaneous/variables.html":{}}}],["shortener",{"_index":1130,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["skip(currentpage",{"_index":459,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["skipthrottle",{"_index":541,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["skipthrottle()@get('validate",{"_index":904,"title":{},"body":{"controllers/UsersController.html":{}}}],["skipthrottle()@patch('refresh",{"_index":886,"title":{},"body":{"controllers/UsersController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@delete(':id",{"_index":525,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@get",{"_index":519,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@get(':id",{"_index":522,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@get(':id/infos",{"_index":516,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@get('download",{"_index":507,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@patch(':id",{"_index":529,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@patch(':id/activate",{"_index":483,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@patch(':id/inactivate",{"_index":504,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@patch('invalidate",{"_index":877,"title":{},"body":{"controllers/UsersController.html":{}}}],["skipthrottle()@useguards(jwtauthguard)@post('shorten",{"_index":486,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useinterceptors(linksinterceptor)@get('token",{"_index":512,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useinterceptors(linksinterceptor)@patch('token",{"_index":532,"title":{},"body":{"controllers/LinksController.html":{}}}],["skipthrottle()@useinterceptors(linksinterceptor)@post('token",{"_index":492,"title":{},"body":{"controllers/LinksController.html":{}}}],["sort",{"_index":460,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{}}}],["src/.../constants.ts",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":1123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../link",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../link.schema.ts",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../refresh",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../verify",{"_index":1124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":148,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/constants.ts",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/dtos/user",{"_index":355,"title":{},"body":{"interfaces/IUserTokenDto.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/auth/jwt",{"_index":357,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LinksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/links/controllers/links/links.controller.ts",{"_index":467,"title":{},"body":{"controllers/LinksController.html":{},"coverage.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:106",{"_index":508,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:114",{"_index":523,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:121",{"_index":530,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:130",{"_index":490,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:137",{"_index":505,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:144",{"_index":484,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:151",{"_index":526,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:158",{"_index":517,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:35",{"_index":514,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:54",{"_index":494,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:72",{"_index":534,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:83",{"_index":487,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/controllers/links/links.controller.ts:95",{"_index":520,"title":{},"body":{"controllers/LinksController.html":{}}}],["src/modules/links/dtos/create",{"_index":198,"title":{},"body":{"classes/CreateLinkDto.html":{},"coverage.html":{}}}],["src/modules/links/dtos/pagination",{"_index":768,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["src/modules/links/dtos/update",{"_index":806,"title":{},"body":{"classes/UpdateLinkDto.html":{},"coverage.html":{}}}],["src/modules/links/links.module.ts",{"_index":614,"title":{},"body":{"modules/LinksModule.html":{}}}],["src/modules/links/models/link",{"_index":407,"title":{},"body":{"classes/LinkInfos.html":{},"coverage.html":{}}}],["src/modules/links/models/link.model.ts",{"_index":395,"title":{},"body":{"classes/Link.html":{},"coverage.html":{}}}],["src/modules/links/models/link.model.ts:10",{"_index":403,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:12",{"_index":404,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:14",{"_index":400,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:16",{"_index":402,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:18",{"_index":406,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:20",{"_index":399,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:22",{"_index":398,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:4",{"_index":397,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:6",{"_index":401,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/models/link.model.ts:8",{"_index":405,"title":{},"body":{"classes/Link.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts",{"_index":413,"title":{},"body":{"injectables/LinkRepository.html":{},"coverage.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:15",{"_index":420,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:20",{"_index":426,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:24",{"_index":427,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:28",{"_index":429,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:35",{"_index":430,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:47",{"_index":431,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:56",{"_index":428,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:60",{"_index":423,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:82",{"_index":424,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:86",{"_index":422,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:9",{"_index":417,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/implementations/link.repository.ts:91",{"_index":425,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["src/modules/links/repositories/link",{"_index":264,"title":{},"body":{"interfaces/ILinkRepository.html":{},"coverage.html":{}}}],["src/modules/links/schemas/link",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/links/schemas/link.schema.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/links/service/links/links.service.ts",{"_index":622,"title":{},"body":{"injectables/LinksService.html":{},"coverage.html":{}}}],["src/modules/links/service/links/links.service.ts:111",{"_index":647,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:116",{"_index":649,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:157",{"_index":651,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:202",{"_index":634,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:21",{"_index":627,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:211",{"_index":630,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:249",{"_index":642,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:263",{"_index":632,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:30",{"_index":629,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:337",{"_index":639,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:356",{"_index":628,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:375",{"_index":648,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:393",{"_index":643,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:401",{"_index":638,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:427",{"_index":636,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/service/links/links.service.ts:98",{"_index":645,"title":{},"body":{"injectables/LinksService.html":{}}}],["src/modules/links/shared/interceptors/links.interceptor.ts",{"_index":591,"title":{},"body":{"injectables/LinksInterceptor.html":{},"coverage.html":{}}}],["src/modules/links/shared/interceptors/links.interceptor.ts:14",{"_index":594,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["src/modules/links/shared/interceptors/links.interceptor.ts:19",{"_index":600,"title":{},"body":{"injectables/LinksInterceptor.html":{}}}],["src/modules/mail/mail.module.ts",{"_index":706,"title":{},"body":{"modules/MailModule.html":{}}}],["src/modules/mail/mail.service",{"_index":980,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/mail/mail.service.ts",{"_index":735,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/modules/mail/mail.service.ts:21",{"_index":746,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/mail/mail.service.ts:4",{"_index":740,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/mail/mail.service.ts:7",{"_index":743,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/users/controllers/users/users.controller.ts",{"_index":862,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:105",{"_index":890,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:113",{"_index":894,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:32",{"_index":873,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:38",{"_index":881,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:45",{"_index":875,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:52",{"_index":887,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:62",{"_index":878,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:69",{"_index":905,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:74",{"_index":884,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:82",{"_index":897,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controllers/users/users.controller.ts:96",{"_index":901,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/dtos/create",{"_index":225,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/login",{"_index":700,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/query",{"_index":780,"title":{},"body":{"classes/QueryUpdateRecoverPasswordDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/recover",{"_index":783,"title":{},"body":{"classes/RecoverPasswordDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/resend",{"_index":794,"title":{},"body":{"classes/ResendEmailDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/update",{"_index":813,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/validate",{"_index":1042,"title":{},"body":{"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{}}}],["src/modules/users/models/refresh",{"_index":784,"title":{},"body":{"classes/RefreshToken.html":{},"coverage.html":{}}}],["src/modules/users/models/users.model",{"_index":223,"title":{},"body":{"classes/CreateLinkDto.html":{},"interfaces/ILinkRepository.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{}}}],["src/modules/users/models/users.model.ts",{"_index":814,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/users/models/users.model.ts:2",{"_index":816,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:3",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:4",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:5",{"_index":817,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:6",{"_index":815,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:7",{"_index":822,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:8",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/models/users.model.ts:9",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/repositories/implementation/user.repository",{"_index":606,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts",{"_index":823,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:10",{"_index":826,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:102",{"_index":834,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:106",{"_index":837,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:110",{"_index":831,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:114",{"_index":842,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:17",{"_index":828,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:21",{"_index":830,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:25",{"_index":835,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:29",{"_index":836,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:33",{"_index":832,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:37",{"_index":839,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:43",{"_index":845,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:54",{"_index":840,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:58",{"_index":844,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:72",{"_index":843,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:83",{"_index":841,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:92",{"_index":838,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/implementation/user.repository.ts:98",{"_index":833,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/modules/users/repositories/user",{"_index":309,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"coverage.html":{}}}],["src/modules/users/schemas/refresh",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/services/users/users.service.ts",{"_index":948,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/services/users/users.service.ts:187",{"_index":961,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:19",{"_index":952,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:233",{"_index":956,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:253",{"_index":971,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:263",{"_index":959,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:28",{"_index":953,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:298",{"_index":967,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:370",{"_index":969,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:423",{"_index":954,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:433",{"_index":963,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:478",{"_index":965,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/services/users/users.service.ts:96",{"_index":957,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.module.ts",{"_index":941,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/shared/models/result",{"_index":653,"title":{},"body":{"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["src/shared/models/result.ts",{"_index":797,"title":{},"body":{"classes/Result.html":{},"coverage.html":{}}}],["src/shared/models/result.ts:1",{"_index":801,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:3",{"_index":804,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:4",{"_index":805,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:5",{"_index":802,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:6",{"_index":803,"title":{},"body":{"classes/Result.html":{}}}],["src/utils/generate",{"_index":655,"title":{},"body":{"injectables/LinksService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/verify",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":1128,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":302,"title":{},"body":{"interfaces/ILinkRepository.html":{},"injectables/LinkRepository.html":{},"injectables/LinksService.html":{}}}],["statuscode",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["strategy.ts",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["strategy.ts:31",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy.ts:9",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":734,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":752,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":799,"title":{},"body":{"classes/Result.html":{}}}],["super",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":748,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["surname",{"_index":206,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"injectables/LinksService.html":{},"classes/UpdateLinkDto.html":{},"miscellaneous/variables.html":{}}}],["surname.length",{"_index":689,"title":{},"body":{"injectables/LinksService.html":{}}}],["surname_link",{"_index":661,"title":{},"body":{"injectables/LinksService.html":{}}}],["svg",{"_index":1132,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":749,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":730,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":732,"title":{},"body":{"modules/MailModule.html":{}}}],["this.appservice.redirectoriginallink(hash",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["this.formatlink(data.original_link",{"_index":658,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.formatsurname(data.surname",{"_index":659,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.generatecodeemail",{"_index":989,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('links.error_surname",{"_index":663,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.i18n.translate('links.link_activated",{"_index":685,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.i18n.translate('links.link_inactivated",{"_index":684,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.i18n.translate('links.link_removed",{"_index":687,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.i18n.translate('links.link_updated_success",{"_index":681,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.i18n.translate('users.email_active",{"_index":1028,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.email_code_send",{"_index":1039,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.email_exists",{"_index":988,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.error_insert_user",{"_index":1003,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.insert_successfully",{"_index":999,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.invalid_code",{"_index":1026,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.not_found_user",{"_index":1024,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.password_confirmation",{"_index":987,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.required_validate_email",{"_index":1011,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.token_recover_pass_expired",{"_index":1018,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.update_password",{"_index":1022,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.user_already_active",{"_index":1025,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.i18n.translate('users.user_not_found",{"_index":1006,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.linkinfosmodel(linkinfodata",{"_index":463,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkinfosmodel.find",{"_index":465,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel",{"_index":456,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel(linkdata",{"_index":436,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel.find",{"_index":448,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel.findbyidanddelete",{"_index":446,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel.findbyidandupdate",{"_index":439,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linkmodel.findone",{"_index":438,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["this.linksrepository.create(data",{"_index":674,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.createlinkinfo(data",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["this.linksrepository.findallbyuser",{"_index":676,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.findallbyuserdownload(usermodel",{"_index":682,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.findalllinkinfosbylink(link",{"_index":688,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.findbyhash",{"_index":662,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.findbyhash(data.hash_link",{"_index":667,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.findbyhash(hash",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["this.linksrepository.findbyid(id",{"_index":679,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.removelinkbyid(id",{"_index":686,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.setclicklink(link._id",{"_index":170,"title":{},"body":{"injectables/AppService.html":{}}}],["this.linksrepository.setnamesurname(id",{"_index":680,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksrepository.setstatuslink(id",{"_index":683,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.linksservice.activatelink(id.id",{"_index":584,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.create(data",{"_index":567,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.createshortlandpage(data",{"_index":578,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.createshortlinkapitoken",{"_index":560,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.downloadlinks(user",{"_index":571,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.inactivatelink(id.id",{"_index":581,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.listalllinksapitoken(apitoken",{"_index":558,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.listlinksinfos(id.id",{"_index":590,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.listlinksuser(user",{"_index":568,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.listlinkuser(id",{"_index":574,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.removelink(id.id",{"_index":587,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.updatelink(id",{"_index":576,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.linksservice.updatelinkapitoken(data",{"_index":563,"title":{},"body":{"controllers/LinksController.html":{}}}],["this.mailerservice.sendmail",{"_index":747,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendvalidationemail",{"_index":996,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.refreshtokenmodel(data",{"_index":850,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.refreshtokenmodel.find",{"_index":854,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.refreshtokenmodel.findbyidanddelete",{"_index":860,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.refreshtokenmodel.findbyidandupdate",{"_index":855,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.refreshtokenmodel.findone",{"_index":859,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel(userdata",{"_index":848,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":853,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":856,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":852,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(userdata",{"_index":995,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyemail(data.email",{"_index":1005,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyemail(email",{"_index":1038,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyemail(userdata.email",{"_index":983,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyid(id",{"_index":1040,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyid(user_id",{"_index":1023,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findrefreshtokenbyuser(user",{"_index":1014,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.setcodeactivationemail(user_id",{"_index":1027,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.setemail(id",{"_index":1041,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.setpassword",{"_index":1019,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbyapitokenpanel(apitoken",{"_index":610,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{}}}],["this.usersrepository.findbyid(user.id",{"_index":670,"title":{},"body":{"injectables/LinksService.html":{}}}],["this.usersservice.create(data",{"_index":917,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.invalidatetoken(user",{"_index":925,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(data",{"_index":919,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.recoverpassword(data.email",{"_index":929,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.refreshtoken(refreshtoken",{"_index":922,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.resendcodeemail(data.email",{"_index":936,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateemail(data.email",{"_index":937,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatepasswordrecover",{"_index":930,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.validateemail(id",{"_index":934,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.validatetoken(api_token",{"_index":928,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttlerguard",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["timeexpires",{"_index":1017,"title":{},"body":{"injectables/UsersService.html":{}}}],["timetoken.gettime",{"_index":1015,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":235,"title":{},"body":{"classes/CreateTokenRecoverPasswordDto.html":{},"interfaces/IUserRepository.html":{},"controllers/LinksController.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["token.dto",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto.ts",{"_index":227,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{},"interfaces/IUserTokenDto.html":{},"classes/ValidateApiTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:10",{"_index":230,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{}}}],["token.dto.ts:5",{"_index":1043,"title":{},"body":{"classes/ValidateApiTokenDto.html":{}}}],["token.dto.ts:6",{"_index":231,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{}}}],["token.dto.ts:8",{"_index":232,"title":{},"body":{"classes/CreateRefreshTokenDto.html":{}}}],["token.expired",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":353,"title":{},"body":{"interfaces/IUserRepository.html":{},"injectables/UserRepository.html":{}}}],["tokens.schema",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{}}}],["tokens.schema.ts",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens.ts",{"_index":785,"title":{},"body":{"classes/RefreshToken.html":{},"coverage.html":{}}}],["tokens.ts:4",{"_index":787,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokens.ts:5",{"_index":789,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokens.ts:6",{"_index":791,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokens.ts:7",{"_index":788,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokens.ts:8",{"_index":790,"title":{},"body":{"classes/RefreshToken.html":{}}}],["tokens.ts:9",{"_index":786,"title":{},"body":{"classes/RefreshToken.html":{}}}],["total_pages",{"_index":462,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["totalpages",{"_index":451,"title":{},"body":{"injectables/LinkRepository.html":{}}}],["transaction",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["transformer",{"_index":777,"title":{},"body":{"classes/PaginationParamsDto.html":{},"dependencies.html":{}}}],["transport",{"_index":719,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"injectables/UsersService.html":{}}}],["ts",{"_index":978,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["ttl",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserTokenDto.html":{},"injectables/JwtStrategy.html":{},"classes/Link.html":{},"classes/LinkInfos.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/ResendEmailDto.html":{},"classes/Result.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/date",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{}}}],["unique",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LinksController.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1142,"title":{},"body":{"properties.html":{}}}],["update",{"_index":781,"title":{},"body":{"classes/QueryUpdateRecoverPasswordDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updated_at",{"_index":349,"title":{},"body":{"interfaces/IUserRepository.html":{},"classes/RefreshToken.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["updateemail",{"_index":869,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateemail(email",{"_index":964,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateemail(lang",{"_index":891,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatelink",{"_index":480,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["updatelink(id",{"_index":527,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["updatelinkapitoken",{"_index":481,"title":{},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{}}}],["updatelinkapitoken(data",{"_index":650,"title":{},"body":{"injectables/LinksService.html":{}}}],["updatelinkapitoken(lang",{"_index":531,"title":{},"body":{"controllers/LinksController.html":{}}}],["updatelinkdto",{"_index":528,"title":{"classes/UpdateLinkDto.html":{}},"body":{"controllers/LinksController.html":{},"injectables/LinksService.html":{},"classes/UpdateLinkDto.html":{},"coverage.html":{}}}],["updatepassworddto",{"_index":812,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"classes/UpdatePasswordDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updatepasswordrecover",{"_index":870,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatepasswordrecover(lang",{"_index":895,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatepasswordrecover(token",{"_index":966,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":742,"title":{},"body":{"injectables/MailService.html":{}}}],["use",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":501,"title":{},"body":{"controllers/LinksController.html":{}}}],["usefactory",{"_index":717,"title":{},"body":{"modules/MailModule.html":{}}}],["useguards",{"_index":539,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":564,"title":{},"body":{"controllers/LinksController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":540,"title":{},"body":{"controllers/LinksController.html":{}}}],["useinterceptors(linksinterceptor",{"_index":553,"title":{},"body":{"controllers/LinksController.html":{}}}],["user",{"_index":137,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"interfaces/ILinkRepository.html":{},"interfaces/IUserRepository.html":{},"classes/Link.html":{},"injectables/LinkRepository.html":{},"controllers/LinksController.html":{},"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"modules/MailModule.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":998,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.api_token",{"_index":1012,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.code_validation_email",{"_index":1010,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.email",{"_index":1001,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.password",{"_index":1009,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.save",{"_index":849,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user_email",{"_index":1000,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_id",{"_index":970,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata",{"_index":829,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["userdata.api_token",{"_index":991,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.code_validation_email",{"_index":994,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.confirmation_password",{"_index":986,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.email",{"_index":997,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.password",{"_index":985,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail._id",{"_index":1020,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":669,"title":{},"body":{"injectables/LinksService.html":{},"injectables/UserRepository.html":{}}}],["userrepository",{"_index":605,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/LinksInterceptor.html":{},"modules/LinksModule.html":{},"injectables/LinksService.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users.dto",{"_index":906,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.dto.ts",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["users.dto.ts:10",{"_index":701,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["users.dto.ts:11",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:15",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:16",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:17",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:18",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:19",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:20",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users.dto.ts:6",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["users.model",{"_index":792,"title":{},"body":{"classes/RefreshToken.html":{}}}],["users/repositories/implementation/user.repository",{"_index":615,"title":{},"body":{"modules/LinksModule.html":{}}}],["users/schemas/refresh",{"_index":616,"title":{},"body":{"modules/LinksModule.html":{}}}],["users/schemas/user.schema",{"_index":617,"title":{},"body":{"modules/LinksModule.html":{}}}],["userschema",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/LinksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":861,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":62,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":595,"title":{},"body":{"injectables/LinksInterceptor.html":{},"injectables/LinksService.html":{}}}],["usersservice",{"_index":909,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/verify",{"_index":974,"title":{},"body":{"injectables/UsersService.html":{}}}],["val1",{"_index":1029,"title":{},"body":{"injectables/UsersService.html":{}}}],["val1}${val2}${val3}${val4}${val5}${val6",{"_index":1037,"title":{},"body":{"injectables/UsersService.html":{}}}],["val2",{"_index":1032,"title":{},"body":{"injectables/UsersService.html":{}}}],["val3",{"_index":1033,"title":{},"body":{"injectables/UsersService.html":{}}}],["val4",{"_index":1034,"title":{},"body":{"injectables/UsersService.html":{}}}],["val5",{"_index":1035,"title":{},"body":{"injectables/UsersService.html":{}}}],["val6",{"_index":1036,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateapitokendto",{"_index":903,"title":{"classes/ValidateApiTokenDto.html":{}},"body":{"controllers/UsersController.html":{},"classes/ValidateApiTokenDto.html":{},"coverage.html":{}}}],["validateemail",{"_index":871,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["validateemail(lang",{"_index":898,"title":{},"body":{"controllers/UsersController.html":{}}}],["validateemail(user_id",{"_index":968,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateemaildto",{"_index":899,"title":{"classes/ValidateEmailDto.html":{}},"body":{"controllers/UsersController.html":{},"classes/ValidateEmailDto.html":{},"coverage.html":{}}}],["validatetoken",{"_index":872,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["validatetoken(@query",{"_index":927,"title":{},"body":{"controllers/UsersController.html":{}}}],["validatetoken(api_token",{"_index":902,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["validation",{"_index":767,"title":{},"body":{"injectables/MailService.html":{}}}],["validator",{"_index":222,"title":{},"body":{"classes/CreateLinkDto.html":{},"classes/CreateRefreshTokenDto.html":{},"classes/CreateTokenRecoverPasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/PaginationParamsDto.html":{},"classes/QueryUpdateRecoverPasswordDto.html":{},"classes/RecoverPasswordDto.html":{},"classes/ResendEmailDto.html":{},"classes/UpdateLinkDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/ValidateApiTokenDto.html":{},"classes/ValidateEmailDto.html":{},"dependencies.html":{}}}],["value",{"_index":770,"title":{},"body":{"classes/PaginationParamsDto.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1144,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifiedcallback",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verifypassconfirmation",{"_index":984,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifypasswordconfirmation",{"_index":973,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["verifypasswordconfirmation(password",{"_index":1126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":1138,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinksModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                redirectOriginalLink\n                            \n                            \n                                    Public\n                                    Async\n                                redirectToSite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        redirectOriginalLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectOriginalLink(hash: string, res, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':hash')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ip\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        redirectToSite\n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectToSite(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Req, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { RealIP } from 'nestjs-real-ip';\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  public async redirectToSite(@Res() res) {\n    return res.redirect('https://site.cli.la');\n  }\n\n  @Get(':hash')\n  public async redirectOriginalLink(\n    @Param('hash') hash: string,\n    @Res() res,\n    @RealIP() ip: string,\n  ) {\n    return await this.appService.redirectOriginalLink(hash, res, ip);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLinksModule\n\nLinksModule\n\nAppModule -->\n\nLinksModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLinkRepository\n\nLinkRepository\n\nAppModule -->\n\nLinkRepository->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            LinkRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LinksModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './modules/users/users.module';\nimport { LinksModule } from './modules/links/links.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  AcceptLanguageResolver,\n  CookieResolver,\n  HeaderResolver,\n  I18nJsonParser,\n  I18nModule,\n  QueryResolver,\n} from 'nestjs-i18n';\nimport { join } from 'path';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { LinkRepository } from './modules/links/repositories/implementations/link.repository';\nimport { LinkSchema } from './modules/links/schemas/link.schema';\nimport { UserSchema } from './modules/users/schemas/user.schema';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { LinkInfosSchema } from './modules/links/schemas/link-infos.schema';\nimport { MailModule } from './modules/mail/mail.module';\nimport { RefreshTokenSchema } from './modules/users/schemas/refresh-tokens.schema';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    I18nModule.forRoot({\n      fallbackLanguage: 'en',\n      fallbacks: {\n        pt: 'pt-BR',\n      },\n      parser: I18nJsonParser,\n      parserOptions: {\n        path: join(__dirname, '/i18n/'),\n        watch: false,\n      },\n      resolvers: [\n        { use: QueryResolver, options: ['lang', 'locale', 'l'] },\n        new HeaderResolver(['x-custom-lang']),\n        AcceptLanguageResolver,\n        new CookieResolver(['lang', 'locale', 'l']),\n      ],\n    }),\n    MongooseModule.forRoot(process.env.DATABASE_MONGODB_CONNECTION_STRING),\n    MongooseModule.forFeature([\n      { name: 'Link', schema: LinkSchema },\n      { name: 'User', schema: UserSchema },\n      { name: 'LinkInfos', schema: LinkInfosSchema },\n      { name: 'RefreshToken', schema: RefreshTokenSchema },\n    ]),\n    UsersModule,\n    LinksModule,\n    AuthModule,\n    MailModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    LinkRepository,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                redirectOriginalLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(linksRepository: ILinkRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        ILinkRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        redirectOriginalLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectOriginalLink(hash: string, res, ip: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ip\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { LinkRepository } from './modules/links/repositories/implementations/link.repository';\nimport { ILinkRepository } from './modules/links/repositories/link-repository.interface';\nimport { Result } from './shared/models/result';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @Inject(LinkRepository)\n    private readonly linksRepository: ILinkRepository,\n  ) {}\n  public async redirectOriginalLink(hash: string, res, ip: string) {\n    const link = await this.linksRepository.findByHash(hash);\n\n    if (!link || link.active === false) {\n      if (process.env.NODE_ENV === 'DEV') {\n        return res.redirect('https://site.cli.la');\n      } else {\n        return res.redirect('https://site.cli.la');\n      }\n    }\n    const date = new Date(Date.now());\n    const data = {\n      ip: ip,\n      create_at: date,\n      link,\n    };\n    try {\n      await this.linksRepository.createLinkInfo(data);\n      await this.linksRepository.setClickLink(link._id);\n      return res.redirect(`${link.original_link}`);\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt-strategy';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLinkDto.html":{"url":"classes/CreateLinkDto.html","title":"class - CreateLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/dtos/create-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                create_at\n                            \n                            \n                                hash_link\n                            \n                            \n                                name\n                            \n                            \n                                numbers_clicks\n                            \n                            \n                                original_link\n                            \n                            \n                                short_link\n                            \n                            \n                                    Optional\n                                surname\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers_clicks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        original_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsUrl()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        short_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/create-link.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString, IsUrl } from 'class-validator';\nimport { User } from 'src/modules/users/models/users.model';\n\nexport class CreateLinkDto {\n  _id: string;\n\n  name: string;\n\n  short_link: string;\n\n  hash_link: string;\n\n  numbers_clicks: number;\n\n  // @IsString()\n  @IsOptional()\n  surname?: string;\n\n  user: User;\n\n  @IsNotEmpty()\n  @IsUrl()\n  @IsString()\n  original_link: string;\n\n  create_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRefreshTokenDto.html":{"url":"classes/CreateRefreshTokenDto.html","title":"class - CreateRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/create-refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                refresh_token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-refresh-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-refresh-token.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-refresh-token.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { User } from '../models/users.model';\n\nexport class CreateRefreshTokenDto {\n  @IsNotEmpty()\n  refresh_token: string;\n\n  user: User;\n\n  created_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTokenRecoverPasswordDto.html":{"url":"classes/CreateTokenRecoverPasswordDto.html","title":"class - CreateTokenRecoverPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTokenRecoverPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/create-token-recover-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_generate_recover_password_token\n                            \n                            \n                                recover_password_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date_generate_recover_password_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-token-recover-password.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recover_password_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-token-recover-password.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateTokenRecoverPasswordDto {\n  @IsNotEmpty()\n  recover_password_token: string;\n\n  @IsNotEmpty()\n  date_generate_recover_password_token: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/create-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                api_token\n                            \n                            \n                                code_validation_email\n                            \n                            \n                                confirmation_password\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        api_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code_validation_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmation_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(6)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-users.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(6)\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  confirmation_password: string;\n  api_token: string;\n  refresh_token: string;\n  code_validation_email: string;\n  _id: string;\n  __v: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILinkRepository.html":{"url":"interfaces/ILinkRepository.html","title":"interface - ILinkRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILinkRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/repositories/link-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        createLinkInfo\n                                    \n                                \n                                \n                                    \n                                        findAllByUser\n                                    \n                                \n                                \n                                    \n                                        findAllByUserDownload\n                                    \n                                \n                                \n                                    \n                                        findAllLinkInfosByLink\n                                    \n                                \n                                \n                                    \n                                        findByHash\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        removeLinkById\n                                    \n                                \n                                \n                                    \n                                        setClickLink\n                                    \n                                \n                                \n                                    \n                                        setNameSurname\n                                    \n                                \n                                \n                                    \n                                        setStatusLink\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Link)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Link\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createLinkInfo\n                        \n                    \n                \n            \n            \n                \ncreateLinkInfo(linkInfoData: LinkInfos)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkInfoData\n                                    \n                                                LinkInfos\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \nfindAllByUser(user: User, limit: number, page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserDownload\n                        \n                    \n                \n            \n            \n                \nfindAllByUserDownload(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllLinkInfosByLink\n                        \n                    \n                \n            \n            \n                \nfindAllLinkInfosByLink(link: Link)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                Link\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByHash\n                        \n                    \n                \n            \n            \n                \nfindByHash(hash_link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash_link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLinkById\n                        \n                    \n                \n            \n            \n                \nremoveLinkById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setClickLink\n                        \n                    \n                \n            \n            \n                \nsetClickLink(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNameSurname\n                        \n                    \n                \n            \n            \n                \nsetNameSurname(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatusLink\n                        \n                    \n                \n            \n            \n                \nsetStatusLink(id: string, status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/link-repository.interface.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from 'src/modules/users/models/users.model';\nimport { LinkInfos } from '../models/link-infos.model';\nimport { Link } from '../models/link.model';\n\nexport interface ILinkRepository {\n  create(data: Link): Promise;\n  findByHash(hash_link: string): Promise;\n  findById(id: string): Promise;\n  setClickLink(id: string): Promise;\n  setNameSurname(id: string, data): Promise;\n  findAllByUser(user: User, limit: number, page: number): Promise;\n  findAllByUserDownload(user: User): Promise;\n  setStatusLink(id: string, status: boolean): Promise;\n  removeLinkById(id: string): Promise;\n  createLinkInfo(linkInfoData: LinkInfos): Promise;\n  findAllLinkInfosByLink(link: Link): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepository.html":{"url":"interfaces/IUserRepository.html","title":"interface - IUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/repositories/user-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        createRefreshTokens\n                                    \n                                \n                                \n                                    \n                                        deleteRefreshTokenById\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findByApiToken\n                                    \n                                \n                                \n                                    \n                                        findByApiTokenPanel\n                                    \n                                \n                                \n                                    \n                                        findByEmail\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findByRecoverPasswordToken\n                                    \n                                \n                                \n                                    \n                                        findByRefreshToken\n                                    \n                                \n                                \n                                    \n                                        findRefreshTokenByUser\n                                    \n                                \n                                \n                                    \n                                        setApiToken\n                                    \n                                \n                                \n                                    \n                                        setCodeActivationEmail\n                                    \n                                \n                                \n                                    \n                                        setEmail\n                                    \n                                \n                                \n                                    \n                                        setPassword\n                                    \n                                \n                                \n                                    \n                                        setRecoverPasswordToken\n                                    \n                                \n                                \n                                    \n                                        setRefreshToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshTokens\n                        \n                    \n                \n            \n            \n                \ncreateRefreshTokens(data: RefreshToken)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RefreshToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRefreshTokenById\n                        \n                    \n                \n            \n            \n                \ndeleteRefreshTokenById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByApiToken\n                        \n                    \n                \n            \n            \n                \nfindByApiToken(api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByApiTokenPanel\n                        \n                    \n                \n            \n            \n                \nfindByApiTokenPanel(api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByRecoverPasswordToken\n                        \n                    \n                \n            \n            \n                \nfindByRecoverPasswordToken(recover_password_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recover_password_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \nfindByRefreshToken(refresh_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refresh_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRefreshTokenByUser\n                        \n                    \n                \n            \n            \n                \nfindRefreshTokenByUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setApiToken\n                        \n                    \n                \n            \n            \n                \nsetApiToken(id: string, api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCodeActivationEmail\n                        \n                    \n                \n            \n            \n                \nsetCodeActivationEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEmail\n                        \n                    \n                \n            \n            \n                \nsetEmail(id: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPassword\n                        \n                    \n                \n            \n            \n                \nsetPassword(id: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRecoverPasswordToken\n                        \n                    \n                \n            \n            \n                \nsetRecoverPasswordToken(id: string, data: CreateTokenRecoverPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateTokenRecoverPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRefreshToken\n                        \n                    \n                \n            \n            \n                \nsetRefreshToken(id: string, refresh_token: string, updated_at: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/user-repository.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refresh_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updated_at\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateTokenRecoverPasswordDto } from '../dtos/create-token-recover-password.dto';\nimport { RefreshToken } from '../models/refresh-tokens';\nimport { User } from '../models/users.model';\n\nexport interface IUserRepository {\n  create(data: User): Promise;\n  createRefreshTokens(data: RefreshToken): Promise;\n  findByEmail(email: string): Promise;\n  findById(id: string): Promise;\n  findByApiToken(api_token: string): Promise;\n  findAll(): Promise;\n  setRefreshToken(\n    id: string,\n    refresh_token: string,\n    updated_at: Date,\n  ): Promise;\n  setApiToken(id: string, api_token: string): Promise;\n  setPassword(id: string, password: string): Promise;\n  setRecoverPasswordToken(\n    id: string,\n    data: CreateTokenRecoverPasswordDto,\n  ): Promise;\n  findByRefreshToken(refresh_token: string): Promise;\n  findByRecoverPasswordToken(\n    recover_password_token: string,\n  ): Promise;\n  findByApiTokenPanel(api_token: string): Promise;\n  findRefreshTokenByUser(user: User): Promise;\n  setCodeActivationEmail(id: string): Promise;\n  deleteRefreshTokenById(id: string): Promise;\n  setEmail(id: string, email: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserTokenDto.html":{"url":"interfaces/IUserTokenDto.html","title":"interface - IUserTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/user-token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUserTokenDto {\n  email: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt-strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt-strategy.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { isAfter } from 'date-fns';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { jwtConstants } from './constants';\nimport { IUserTokenDto } from './dtos/user-token.dto';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super(\n      {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        ignoreExpiration: true,\n        secretOrKey: jwtConstants.secret,\n      },\n      (payload: any, done: VerifiedCallback) => {\n        const expiresAt = new Date(payload.exp * 1000);\n        if (isAfter(Date.now(), expiresAt)) {\n          throw new UnauthorizedException({\n            statusCode: 401,\n            message: 'token.expired',\n          });\n        }\n\n        return done(null, payload);\n      },\n    );\n  }\n\n  async validate(payload: any): Promise {\n    return {\n      id: payload.id,\n      email: payload.email,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/models/link.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                active\n                            \n                            \n                                create_at\n                            \n                            \n                                hash_link\n                            \n                            \n                                name\n                            \n                            \n                                numbers_clicks\n                            \n                            \n                                original_link\n                            \n                            \n                                short_link\n                            \n                            \n                                    Optional\n                                surname\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers_clicks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        original_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        short_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/modules/users/models/users.model';\n\nexport class Link {\n  _id: string;\n\n  name: string;\n\n  surname?: string;\n\n  original_link: string;\n\n  short_link: string;\n\n  hash_link: string;\n\n  numbers_clicks: number;\n\n  user: User;\n\n  create_at: Date;\n\n  active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkInfos.html":{"url":"classes/LinkInfos.html","title":"class - LinkInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/models/link-infos.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create_at\n                            \n                            \n                                ip\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        create_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link-infos.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link-infos.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Link\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/models/link-infos.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Link } from './link.model';\n\nexport class LinkInfos {\n  ip: string;\n\n  link: Link;\n\n  create_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkRepository.html":{"url":"injectables/LinkRepository.html","title":"injectable - LinkRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinkRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/repositories/implementations/link.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createLinkInfo\n                            \n                            \n                                    Public\n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAllByUserDownload\n                            \n                            \n                                    Public\n                                    Async\n                                findAllLinkInfosByLink\n                            \n                            \n                                    Public\n                                    Async\n                                findByHash\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                removeLinkById\n                            \n                            \n                                    Public\n                                    Async\n                                setClickLink\n                            \n                            \n                                    Public\n                                    Async\n                                setNameSurname\n                            \n                            \n                                    Public\n                                    Async\n                                setStatusLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(linkModel: Model, linkInfosModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/links/repositories/implementations/link.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        linkModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkInfosModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(linkData: Link)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkData\n                                    \n                                                Link\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createLinkInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLinkInfo(linkInfoData: LinkInfos)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkInfoData\n                                    \n                                                LinkInfos\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(user: User, limit: number, page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAllByUserDownload\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserDownload(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAllLinkInfosByLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllLinkInfosByLink(link: Link)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                Link\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByHash(hash_link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash_link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeLinkById\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLinkById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setClickLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setClickLink(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setNameSurname\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNameSurname(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setStatusLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStatusLink(id: string, status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/repositories/implementations/link.repository.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from 'src/modules/users/models/users.model';\nimport { Link } from '../../models/link.model';\nimport { LinkInfos } from '../../models/link-infos.model';\n\n@Injectable()\nexport class LinkRepository {\n  constructor(\n    @InjectModel('Link') private readonly linkModel: Model,\n    @InjectModel('LinkInfos') private readonly linkInfosModel: Model,\n  ) {}\n\n  public async create(linkData: Link): Promise {\n    const link = new this.linkModel(linkData);\n    return await link.save();\n  }\n\n  public async findByHash(hash_link: string): Promise {\n    return await this.linkModel.findOne({ hash_link });\n  }\n\n  public async findById(id: string): Promise {\n    return await this.linkModel.findOne({ _id: id });\n  }\n\n  public async setClickLink(id: string): Promise {\n    await this.linkModel.findByIdAndUpdate(\n      { _id: id },\n      { $inc: { numbers_clicks: 1 } },\n    );\n  }\n\n  public async setNameSurname(id: string, data): Promise {\n    await this.linkModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        name: data.name,\n        surname: data.surname,\n        short_link: data.short_link,\n        hash_link: data.hash_link,\n      },\n    );\n  }\n\n  public async setStatusLink(id: string, status: boolean): Promise {\n    await this.linkModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        active: status,\n      },\n    );\n  }\n\n  public async removeLinkById(id: string): Promise {\n    await this.linkModel.findByIdAndDelete({ _id: id });\n  }\n\n  public async findAllByUser(\n    user: User,\n    limit: number,\n    page: number,\n  ): Promise {\n    const count = (await this.linkModel.find({ user })).length;\n    // const div = count / limit;\n    const totalPages = Math.ceil(count / limit);\n    const currentPage = (Math.max(1, page) - 1) * limit;\n    const links = await this.linkModel\n      .find({ user })\n      .limit(limit)\n      .skip(currentPage)\n      .sort({ _id: 'asc' });\n    const data = {\n      data: links,\n      total_pages: totalPages,\n      count,\n    };\n    return data;\n  }\n\n  public async findAllByUserDownload(user: User): Promise {\n    return await this.linkModel.find({ user });\n  }\n\n  public async createLinkInfo(linkInfoData: LinkInfos): Promise {\n    const linkInfos = new this.linkInfosModel(linkInfoData);\n    return await linkInfos.save();\n  }\n\n  public async findAllLinkInfosByLink(link: Link): Promise {\n    return await this.linkInfosModel.find({ link });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LinksController.html":{"url":"controllers/LinksController.html","title":"controller - LinksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LinksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/controllers/links/links.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/links\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                activateLink\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createShortLandpage\n                            \n                            \n                                    Public\n                                    Async\n                                createShortLinkApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                inactivateLink\n                            \n                            \n                                    Public\n                                    Async\n                                linksDownload\n                            \n                            \n                                    Public\n                                    Async\n                                listAllLinksApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                listLinksInfos\n                            \n                            \n                                    Public\n                                    Async\n                                listLinksUser\n                            \n                            \n                                    Public\n                                    Async\n                                listLinkUser\n                            \n                            \n                                    Public\n                                    Async\n                                removeLink\n                            \n                            \n                                    Public\n                                    Async\n                                updateLink\n                            \n                            \n                                    Public\n                                    Async\n                                updateLinkApiToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        activateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    activateLink(id, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Patch(':id/activate')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateLinkDto, request, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Post('shorten')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createShortLandpage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShortLandpage(data: CreateLinkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('shorten/landpage')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createShortLinkApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShortLinkApiToken(request, lang: string, data: CreateLinkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseInterceptors(LinksInterceptor)@Post('token-api/shorten')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:54\n                \n            \n\n\n            \n                \n                    Required api token from authorization obtained from panel\nRoute used only in the panel service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        inactivateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    inactivateLink(id, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Patch(':id/inactivate')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        linksDownload\n                        \n                    \n                \n            \n            \n                \n                    \n                    linksDownload(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Get('download')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listAllLinksApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllLinksApiToken(request, lang: string, query: PaginationParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseInterceptors(LinksInterceptor)@Get('token-api/list')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:35\n                \n            \n\n\n            \n                \n                    Required api token from authorization obtained from panel\nRoute used only in the panel service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinksInfos\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinksInfos(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Get(':id/infos')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinksUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinksUser(request, query: PaginationParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinkUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinkUser(request, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLink(id, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLink(id, data: UpdateLinkDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateLinkApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLinkApiToken(lang: string, data: UpdateLinkDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseInterceptors(LinksInterceptor)@Patch('token-api/:id/update-link')\n                \n            \n\n            \n                \n                    Defined in src/modules/links/controllers/links/links.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { SkipThrottle } from '@nestjs/throttler';\nimport { I18nLang } from 'nestjs-i18n';\nimport { IUserTokenDto } from 'src/modules/auth/dtos/user-token.dto';\nimport { JwtAuthGuard } from 'src/modules/auth/jwt-auth.guard';\nimport { CreateLinkDto } from '../../dtos/create-link.dto';\nimport { PaginationParamsDto } from '../../dtos/pagination-params.dto';\nimport { UpdateLinkDto } from '../../dtos/update-link.dto';\nimport { LinksService } from '../../service/links/links.service';\nimport { LinksInterceptor } from '../../shared/interceptors/links.interceptor';\n\n@Controller('api/links')\nexport class LinksController {\n  constructor(private readonly linksService: LinksService) {}\n\n  /**\n   * Required api token from authorization obtained from panel\n   * Route used only in the panel service\n   */\n  @SkipThrottle()\n  @UseInterceptors(LinksInterceptor)\n  @Get('token-api/list')\n  public async listAllLinksApiToken(\n    @Req() request,\n    @I18nLang() lang: string,\n    @Query() query: PaginationParamsDto,\n  ) {\n    const {\n      headers: { authorization },\n    } = request;\n    const apiToken = authorization.split(' ')[1];\n    return await this.linksService.listAllLinksApiToken(apiToken, lang, query);\n  }\n\n  /**\n   * Required api token from authorization obtained from panel\n   * Route used only in the panel service\n   */\n  @SkipThrottle()\n  @UseInterceptors(LinksInterceptor)\n  @Post('token-api/shorten')\n  public async createShortLinkApiToken(\n    @Req() request,\n    @I18nLang() lang: string,\n    @Body() data: CreateLinkDto,\n  ) {\n    const {\n      headers: { authorization },\n    } = request;\n    const apiToken = authorization.split(' ')[1];\n    return await this.linksService.createShortLinkApiToken(\n      data,\n      apiToken,\n      lang,\n    );\n  }\n  @SkipThrottle()\n  @UseInterceptors(LinksInterceptor)\n  @Patch('token-api/:id/update-link')\n  public async updateLinkApiToken(\n    @I18nLang() lang: string,\n    @Body() data: UpdateLinkDto,\n    @Param('id') id: string,\n  ) {\n    return await this.linksService.updateLinkApiToken(data, lang, id);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Post('shorten')\n  public async create(\n    @Body() data: CreateLinkDto,\n    @Req() request,\n    @I18nLang() lang: string,\n  ) {\n    const user: IUserTokenDto = request.user;\n    return await this.linksService.create(data, user, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  public async listLinksUser(\n    @Req() request,\n    @Query() query: PaginationParamsDto,\n  ) {\n    const user: IUserTokenDto = request.user;\n    return await this.linksService.listLinksUser(user, query);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Get('download')\n  public async linksDownload(@Req() request) {\n    const user: IUserTokenDto = request.user;\n    return await this.linksService.downloadLinks(user);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  public async listLinkUser(@Req() request, @Param('id') id) {\n    return await this.linksService.listLinkUser(id);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  public async updateLink(\n    @Param('id') id,\n    @Body() data: UpdateLinkDto,\n    @I18nLang() lang: string,\n  ) {\n    return await this.linksService.updateLink(id, data, lang);\n  }\n\n  @Post('shorten/landpage')\n  public async createShortLandpage(@Body() data: CreateLinkDto) {\n    return await this.linksService.createShortLandpage(data);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id/inactivate')\n  public async inactivateLink(@Param() id, @I18nLang() lang: string) {\n    return await this.linksService.inactivateLink(id.id, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id/activate')\n  public async activateLink(@Param() id, @I18nLang() lang: string) {\n    return await this.linksService.activateLink(id.id, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  public async removeLink(@Param() id, @I18nLang() lang: string) {\n    return await this.linksService.removeLink(id.id, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id/infos')\n  public async listLinksInfos(@Param() id) {\n    return await this.linksService.listLinksInfos(id.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinksInterceptor.html":{"url":"injectables/LinksInterceptor.html","title":"injectable - LinksInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinksInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/shared/interceptors/links.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: IUserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/links/shared/interceptors/links.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/shared/interceptors/links.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  NestInterceptor,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { UserRepository } from 'src/modules/users/repositories/implementation/user.repository';\nimport { IUserRepository } from 'src/modules/users/repositories/user-repository.interface';\n\n@Injectable()\nexport class LinksInterceptor implements NestInterceptor {\n  constructor(\n    @Inject(UserRepository)\n    private readonly usersRepository: IUserRepository,\n  ) {}\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise> {\n    try {\n      const {\n        headers: { authorization },\n      } = context.switchToHttp().getRequest();\n      const apiToken = authorization.split(' ')[1];\n      const user = await this.usersRepository.findByApiTokenPanel(apiToken);\n      if (user) {\n        return next.handle();\n      } else {\n        throw '';\n      }\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LinksModule.html":{"url":"modules/LinksModule.html","title":"module - LinksModule","body":"\n                   \n\n\n\n\n    Modules\n    LinksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LinksModule\n\n\n\ncluster_LinksModule_providers\n\n\n\n\nLinkRepository\n\nLinkRepository\n\n\n\nLinksModule\n\nLinksModule\n\nLinksModule -->\n\nLinkRepository->LinksModule\n\n\n\n\n\nLinksService\n\nLinksService\n\nLinksModule -->\n\nLinksService->LinksModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nLinksModule -->\n\nUserRepository->LinksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/links/links.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LinkRepository\n                        \n                        \n                            LinksService\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LinksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserRepository } from '../users/repositories/implementation/user.repository';\nimport { RefreshTokenSchema } from '../users/schemas/refresh-tokens.schema';\nimport { UserSchema } from '../users/schemas/user.schema';\nimport { LinksController } from './controllers/links/links.controller';\nimport { LinkRepository } from './repositories/implementations/link.repository';\nimport { LinkInfosSchema } from './schemas/link-infos.schema';\nimport { LinkSchema } from './schemas/link.schema';\nimport { LinksService } from './service/links/links.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'Link', schema: LinkSchema },\n      { name: 'LinkInfos', schema: LinkInfosSchema },\n      { name: 'User', schema: UserSchema },\n      { name: 'RefreshToken', schema: RefreshTokenSchema },\n    ]),\n  ],\n  controllers: [LinksController],\n  providers: [LinksService, LinkRepository, UserRepository],\n})\nexport class LinksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinksService.html":{"url":"injectables/LinksService.html","title":"injectable - LinksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/service/links/links.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                activateLink\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createShortLandpage\n                            \n                            \n                                    Public\n                                    Async\n                                createShortLinkApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                downloadLinks\n                            \n                            \n                                    Private\n                                    Async\n                                formatLink\n                            \n                            \n                                    Private\n                                    Async\n                                formatSurname\n                            \n                            \n                                    Public\n                                    Async\n                                inactivateLink\n                            \n                            \n                                    Public\n                                    Async\n                                listAllLinksApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                listLinksInfos\n                            \n                            \n                                    Public\n                                    Async\n                                listLinksUser\n                            \n                            \n                                    Public\n                                    Async\n                                listLinkUser\n                            \n                            \n                                    Public\n                                    Async\n                                removeLink\n                            \n                            \n                                    Public\n                                    Async\n                                updateLink\n                            \n                            \n                                    Public\n                                    Async\n                                updateLinkApiToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(linksRepository: ILinkRepository, usersRepository: IUserRepository, i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/links/service/links/links.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        ILinkRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        activateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    activateLink(id: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateLinkDto, user: IUserTokenDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createShortLandpage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShortLandpage(data: CreateLinkDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createShortLinkApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShortLinkApiToken(data: CreateLinkDto, apiToken: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        downloadLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadLinks(user: IUserTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        formatLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatLink(link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:427\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        formatSurname\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatSurname(surname, minLength, lang)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:401\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    surname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        inactivateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    inactivateLink(id: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listAllLinksApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllLinksApiToken(apiToken: string, lang, params: PaginationParamsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PaginationParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinksInfos\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinksInfos(id)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:393\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinksUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinksUser(user: IUserTokenDto, params: PaginationParamsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PaginationParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        listLinkUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    listLinkUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLink(id: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:375\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLink(id: string, data: UpdateLinkDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateLinkApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLinkApiToken(data: UpdateLinkDto, lang: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/links/service/links/links.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { I18nService } from 'nestjs-i18n';\nimport { IUserTokenDto } from 'src/modules/auth/dtos/user-token.dto';\nimport { UserRepository } from 'src/modules/users/repositories/implementation/user.repository';\nimport { IUserRepository } from 'src/modules/users/repositories/user-repository.interface';\nimport { Result } from 'src/shared/models/result';\nimport { generateHash } from 'src/utils/generate-hash';\nimport { CreateLinkDto } from '../../dtos/create-link.dto';\nimport { PaginationParamsDto } from '../../dtos/pagination-params.dto';\nimport { UpdateLinkDto } from '../../dtos/update-link.dto';\nimport { LinkRepository } from '../../repositories/implementations/link.repository';\nimport { ILinkRepository } from '../../repositories/link-repository.interface';\n\n@Injectable()\nexport class LinksService {\n  constructor(\n    @Inject(LinkRepository)\n    private readonly linksRepository: ILinkRepository,\n    @Inject(UserRepository)\n    private readonly usersRepository: IUserRepository,\n    private readonly i18n: I18nService,\n  ) {}\n\n  public async create(data: CreateLinkDto, user: IUserTokenDto, lang: string) {\n    data.original_link = await this.formatLink(data.original_link);\n    if (data.surname) {\n      await this.formatSurname(data.surname, 6, lang);\n      data.hash_link = data.surname;\n      const surname_link = await this.linksRepository.findByHash(\n        data.hash_link,\n      );\n      if (surname_link) {\n        throw new BadRequestException(\n          new Result(\n            await this.i18n.translate('links.ERROR_SURNAME', {\n              lang,\n            }),\n            false,\n            {},\n            null,\n          ),\n        );\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + data.surname;\n      } else {\n        data.short_link = 'https://cli.la/' + data.surname;\n      }\n    } else {\n      let hash = '';\n      while (true) {\n        hash = generateHash(6).toString();\n        data.hash_link = hash;\n        const hash_link = await this.linksRepository.findByHash(data.hash_link);\n        if (!hash_link) {\n          break;\n        }\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + hash;\n      } else {\n        data.short_link = 'https://cli.la/' + hash;\n      }\n    }\n\n    const userModel = await this.usersRepository.findById(user.id);\n\n    if (!userModel) {\n      throw new ForbiddenException('');\n    }\n    data.create_at = new Date(Date.now());\n    data.user = userModel;\n    try {\n      const createLink = await this.linksRepository.create(data);\n      return new Result(\n        '',\n        true,\n        {\n          short_link: data.short_link,\n          id: createLink._id,\n          original_link: data.original_link,\n        },\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async listLinksUser(user: IUserTokenDto, params: PaginationParamsDto) {\n    const userModel = await this.usersRepository.findById(user.id);\n    if (!userModel) {\n      throw new ForbiddenException('');\n    }\n    const links = await this.linksRepository.findAllByUser(\n      userModel,\n      params.limit,\n      params.page,\n    );\n    return new Result('', true, links, null);\n  }\n\n  public async listLinkUser(id: string) {\n    const link = await this.linksRepository.findById(id);\n    return new Result('', true, link, null);\n  }\n\n  public async updateLink(id: string, data: UpdateLinkDto, lang: string) {\n    if (data.surname) {\n      data.hash_link = data.surname;\n      const surname_link = await this.linksRepository.findByHash(\n        data.hash_link,\n      );\n      if (surname_link) {\n        throw new BadRequestException(\n          new Result(\n            await this.i18n.translate('links.ERROR_SURNAME', {\n              lang,\n            }),\n            false,\n            {},\n            null,\n          ),\n        );\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + data.surname;\n      } else {\n        data.short_link = 'https://cli.la/' + data.surname;\n      }\n    }\n    try {\n      await this.linksRepository.setNameSurname(id, data);\n      return new Result(\n        await this.i18n.translate('links.LINK_UPDATED_SUCCESS', {\n          lang,\n        }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async updateLinkApiToken(\n    data: UpdateLinkDto,\n    lang: string,\n    id: string,\n  ) {\n    if (data.surname) {\n      data.hash_link = data.surname;\n      const surname_link = await this.linksRepository.findByHash(\n        data.hash_link,\n      );\n      if (surname_link) {\n        throw new BadRequestException(\n          new Result(\n            await this.i18n.translate('links.ERROR_SURNAME', {\n              lang,\n            }),\n            false,\n            {},\n            null,\n          ),\n        );\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + data.surname;\n      } else {\n        data.short_link = 'https://cli.la/' + data.surname;\n      }\n    }\n    try {\n      await this.linksRepository.setNameSurname(id, data);\n      return new Result(\n        await this.i18n.translate('links.LINK_UPDATED_SUCCESS', {\n          lang,\n        }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async downloadLinks(user: IUserTokenDto) {\n    const userModel = await this.usersRepository.findById(user.id);\n    if (!userModel) {\n      throw new ForbiddenException('');\n    }\n    const links = await this.linksRepository.findAllByUserDownload(userModel);\n    return new Result('', true, links, null);\n  }\n\n  public async createShortLandpage(data: CreateLinkDto) {\n    data.original_link = await this.formatLink(data.original_link);\n\n    let hash = '';\n    while (true) {\n      hash = generateHash(6).toString();\n      data.hash_link = hash;\n      const hash_link = await this.linksRepository.findByHash(data.hash_link);\n      if (!hash_link) {\n        break;\n      }\n    }\n    if (process.env.NODE_ENV === 'DEV') {\n      data.short_link = 'http://localhost:3000/' + hash;\n    } else {\n      data.short_link = 'https://cli.la/' + hash;\n    }\n\n    data.create_at = new Date(Date.now());\n    try {\n      const createLink = await this.linksRepository.create(data);\n      return new Result(\n        '',\n        true,\n        {\n          short_link: data.short_link,\n          id: createLink._id,\n          original_link: data.original_link,\n        },\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async listAllLinksApiToken(\n    apiToken: string,\n    lang,\n    params: PaginationParamsDto,\n  ) {\n    const user = await this.usersRepository.findByApiTokenPanel(apiToken);\n    const links = await this.linksRepository.findAllByUser(\n      user,\n      params.limit,\n      params.page,\n    );\n    return links;\n  }\n\n  public async createShortLinkApiToken(\n    data: CreateLinkDto,\n    apiToken: string,\n    lang: string,\n  ) {\n    data.original_link = await this.formatLink(data.original_link);\n\n    if (data.surname) {\n      await this.formatSurname(data.surname, 6, lang);\n\n      data.hash_link = data.surname;\n      const surname_link = await this.linksRepository.findByHash(\n        data.hash_link,\n      );\n      if (surname_link) {\n        throw new BadRequestException(\n          new Result(\n            await this.i18n.translate('links.ERROR_SURNAME', {\n              lang,\n            }),\n            false,\n            {},\n            null,\n          ),\n        );\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + data.surname;\n      } else {\n        data.short_link = 'https://cli.la/' + data.surname;\n      }\n    } else {\n      let hash = '';\n      while (true) {\n        hash = generateHash(6).toString();\n        data.hash_link = hash;\n        const hash_link = await this.linksRepository.findByHash(data.hash_link);\n        if (!hash_link) {\n          break;\n        }\n      }\n      if (process.env.NODE_ENV === 'DEV') {\n        data.short_link = 'http://localhost:3000/' + hash;\n      } else {\n        data.short_link = 'https://cli.la/' + hash;\n      }\n    }\n\n    const user = await this.usersRepository.findByApiTokenPanel(apiToken);\n\n    if (!user) {\n      throw new ForbiddenException('');\n    }\n    data.create_at = new Date(Date.now());\n    data.user = user;\n    try {\n      const createLink = await this.linksRepository.create(data);\n      return new Result(\n        '',\n        true,\n        {\n          short_link: data.short_link,\n          id: createLink._id,\n          original_link: data.original_link,\n        },\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async inactivateLink(id: string, lang: string) {\n    try {\n      const status = false;\n      await this.linksRepository.setStatusLink(id, status);\n      return new Result(\n        await this.i18n.translate('links.LINK_INACTIVATED', {\n          lang,\n        }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async activateLink(id: string, lang: string) {\n    try {\n      const status = true;\n      await this.linksRepository.setStatusLink(id, status);\n      return new Result(\n        await this.i18n.translate('links.LINK_ACTIVATED', {\n          lang,\n        }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async removeLink(id: string, lang: string) {\n    try {\n      await this.linksRepository.removeLinkById(id);\n      return new Result(\n        await this.i18n.translate('links.LINK_REMOVED', {\n          lang,\n        }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async listLinksInfos(id) {\n    const link = await this.linksRepository.findById(id);\n    if (link) {\n      return await this.linksRepository.findAllLinkInfosByLink(link);\n    }\n    return false;\n  }\n\n  private async formatSurname(surname, minLength, lang) {\n    if (surname.length = 0) {\n      link = link.replace('http//', '');\n    }\n    if (link.indexOf('https//') >= 0) {\n      link = link.replace('https//', '');\n    }\n    if (link.indexOf('https') === -1) {\n      const regex = new RegExp('^(http|https)://', 'i');\n      link = link.replace(regex, '');\n      if (link.indexOf('http') >= 0) {\n        link = 'https://' + link;\n      } else {\n        link = 'https://' + link;\n      }\n    }\n    return link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/login-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/login-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/login-users.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { join } from 'path';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // imports: [ConfigModule], // import module if not enabled globally\n      useFactory: async (config: ConfigService) => ({\n        // transport: config.get(\"MAIL_TRANSPORT\"),\n        // or\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: false,\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"Cli.la\" `,\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendRecoverPassword\n                            \n                            \n                                    Async\n                                sendValidationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mail/mail.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendRecoverPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendRecoverPassword(email: string, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mail/mail.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendValidationEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendValidationEmail(email: string, code: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mail/mail.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\n@Injectable()\nexport class MailService {\n  constructor(private mailerService: MailerService) {}\n\n  async sendRecoverPassword(email: string, url: string) {\n    await this.mailerService.sendMail({\n      to: email,\n      // from: '\"Support Team\" ', // override default from\n      subject: 'Redefinição de senha Cli.la',\n      template: 'recover-password', // `.hbs` extension is appended automatically\n      context: {\n        // ✏️ filling curly brackets with content\n        name: email,\n        url,\n      },\n    });\n  }\n\n  async sendValidationEmail(email: string, code: string, id: string) {\n    await this.mailerService.sendMail({\n      to: email,\n      // from: '\"Support Team\" ', // override default from\n      subject: 'Ativação de e-mail Cli.la',\n      template: 'validation-email', // `.hbs` extension is appended automatically\n      context: {\n        // ✏️ filling curly brackets with content\n        name: email,\n        code,\n        id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParamsDto.html":{"url":"classes/PaginationParamsDto.html","title":"class - PaginationParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/dtos/pagination-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/pagination-params.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/pagination-params.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class PaginationParamsDto {\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  page?: number = 1;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(1)\n  limit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryUpdateRecoverPasswordDto.html":{"url":"classes/QueryUpdateRecoverPasswordDto.html","title":"class - QueryUpdateRecoverPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryUpdateRecoverPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/query-update-recover-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/query-update-recover-password.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/query-update-recover-password.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class QueryUpdateRecoverPasswordDto {\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecoverPasswordDto.html":{"url":"classes/RecoverPasswordDto.html","title":"class - RecoverPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecoverPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/recover-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/recover-password.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class RecoverPasswordDto {\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshToken.html":{"url":"classes/RefreshToken.html","title":"class - RefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/models/refresh-tokens.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                __v\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                created_at\n                            \n                            \n                                refresh_token\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/refresh-tokens.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './users.model';\n\nexport class RefreshToken {\n  _id?: string;\n  refresh_token: string;\n  user: User;\n  created_at: Date;\n  updated_at?: Date;\n  __v?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResendEmailDto.html":{"url":"classes/ResendEmailDto.html","title":"class - ResendEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResendEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/resend-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/resend-email.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class ResendEmailDto {\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/result.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, success: boolean, data: any, errors: any)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/result.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        success\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/models/result.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/models/result.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/models/result.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/models/result.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Result {\n  constructor(\n    public message: string,\n    public success: boolean,\n    public data: any,\n    public errors: any,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLinkDto.html":{"url":"classes/UpdateLinkDto.html","title":"class - UpdateLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/links/dtos/update-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hash_link\n                            \n                            \n                                name\n                            \n                            \n                                short_link\n                            \n                            \n                                    Optional\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hash_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/update-link.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/update-link.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        short_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/update-link.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/links/dtos/update-link.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateLinkDto {\n  @IsString()\n  @IsOptional()\n  surname?: string;\n\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  short_link: string;\n\n  hash_link: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/update-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/update-password.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/models/users.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                api_token\n                            \n                            \n                                    Optional\n                                code_validation_email\n                            \n                            \n                                    Optional\n                                date_generate_recover_password_token\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                recover_password_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        api_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        code_validation_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        date_generate_recover_password_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        recover_password_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/models/users.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  _id: string;\n  email: string;\n  password: string;\n  api_token: string;\n  __v: number;\n  recover_password_token?: string;\n  date_generate_recover_password_token?: Date;\n  code_validation_email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/repositories/implementation/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createRefreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                deleteRefreshTokenById\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                findByApiTokenPanel\n                            \n                            \n                                    Public\n                                    Async\n                                findByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByRecoverPasswordToken\n                            \n                            \n                                    Public\n                                    Async\n                                findByRefreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                findRefreshTokenByUser\n                            \n                            \n                                    Public\n                                    Async\n                                setApiToken\n                            \n                            \n                                    Public\n                                    Async\n                                setCodeActivationEmail\n                            \n                            \n                                    Public\n                                    Async\n                                setEmail\n                            \n                            \n                                    Public\n                                    Async\n                                setPassword\n                            \n                            \n                                    Public\n                                    Async\n                                setRecoverPasswordToken\n                            \n                            \n                                    Public\n                                    Async\n                                setRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, refreshTokenModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/repositories/implementation/user.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createRefreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRefreshTokens(data: RefreshToken)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RefreshToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteRefreshTokenById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRefreshTokenById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByApiToken(api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByApiTokenPanel\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByApiTokenPanel(api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByRecoverPasswordToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRecoverPasswordToken(recover_password_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recover_password_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRefreshToken(refresh_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refresh_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findRefreshTokenByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findRefreshTokenByUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setApiToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setApiToken(id: string, api_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setCodeActivationEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCodeActivationEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEmail(id: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(id: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setRecoverPasswordToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRecoverPasswordToken(id: string, data: CreateTokenRecoverPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateTokenRecoverPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRefreshToken(id: string, refresh_token: string, updated_at: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/repositories/implementation/user.repository.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refresh_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updated_at\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateTokenRecoverPasswordDto } from '../../dtos/create-token-recover-password.dto';\nimport { RefreshToken } from '../../models/refresh-tokens';\nimport { User } from '../../models/users.model';\nimport { IUserRepository } from '../user-repository.interface';\n\n@Injectable()\nexport class UserRepository implements IUserRepository {\n  constructor(\n    @InjectModel('User') private readonly userModel: Model,\n    @InjectModel('RefreshToken')\n    private readonly refreshTokenModel: Model,\n  ) {}\n\n  public async create(userData: User): Promise {\n    const user = new this.userModel(userData);\n    return await user.save();\n  }\n  public async createRefreshTokens(data: RefreshToken): Promise {\n    const refreshToken = new this.refreshTokenModel(data);\n    return await refreshToken.save();\n  }\n  public async findByEmail(email: string): Promise {\n    return await this.userModel.findOne({ email });\n  }\n\n  public async findById(id: string): Promise {\n    return await this.userModel.findOne({ _id: id });\n  }\n\n  public async findAll(): Promise {\n    return await this.userModel.find();\n  }\n\n  public async findRefreshTokenByUser(\n    user: User,\n  ): Promise {\n    return await this.refreshTokenModel.find({ user });\n  }\n\n  public async setRefreshToken(\n    id: string,\n    refresh_token: string,\n    updated_at: Date,\n  ): Promise {\n    await this.refreshTokenModel.findByIdAndUpdate(\n      { _id: id },\n      { refresh_token: refresh_token, updated_at },\n    );\n  }\n\n  public async setApiToken(id: string, api_token: string): Promise {\n    await this.userModel.findByIdAndUpdate({ _id: id }, { api_token });\n  }\n\n  public async setRecoverPasswordToken(\n    id: string,\n    data: CreateTokenRecoverPasswordDto,\n  ): Promise {\n    await this.userModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        recover_password_token: data.recover_password_token,\n        date_generate_recover_password_token:\n          data.date_generate_recover_password_token,\n      },\n    );\n  }\n\n  public async setPassword(id: string, password: string): Promise {\n    await this.userModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        password,\n        recover_password_token: null,\n        date_generate_recover_password_token: null,\n      },\n    );\n  }\n\n  public async setCodeActivationEmail(id: string): Promise {\n    await this.userModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        code_validation_email: 'A',\n      },\n    );\n  }\n\n  public async findByRefreshToken(\n    refresh_token: string,\n  ): Promise {\n    return await this.refreshTokenModel.findOne({ refresh_token });\n  }\n\n  public async findByApiToken(api_token: string): Promise {\n    return await this.userModel.findOne({ api_token });\n  }\n\n  public async findByApiTokenPanel(api_token: string) {\n    return await this.userModel.findOne({ api_token });\n  }\n\n  public async findByRecoverPasswordToken(recover_password_token: string) {\n    return await this.userModel.findOne({ recover_password_token });\n  }\n\n  public async deleteRefreshTokenById(id: string): Promise {\n    return await this.refreshTokenModel.findByIdAndDelete({ _id: id });\n  }\n\n  public async setEmail(id: string, email: string): Promise {\n    await this.userModel.findByIdAndUpdate(\n      { _id: id },\n      {\n        email,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controllers/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                getUsers\n                            \n                            \n                                    Public\n                                    Async\n                                invalidateToken\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                recoverPassword\n                            \n                            \n                                    Public\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                resendCodeEmail\n                            \n                            \n                                    Public\n                                    Async\n                                updateEmail\n                            \n                            \n                                    Public\n                                    Async\n                                updatePasswordRecover\n                            \n                            \n                                    Public\n                                    Async\n                                validateEmail\n                            \n                            \n                                    Public\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    invalidateToken(lang: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@UseGuards(JwtAuthGuard)@Patch('invalidate-token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginUserDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        recoverPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(lang: string, data: RecoverPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('recover-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                RecoverPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(refreshToken: CreateRefreshTokenDto, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@Patch('refresh-token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                CreateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        resendCodeEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    resendCodeEmail(lang: string, data: ResendEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resend-code-email')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ResendEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEmail(lang: string, data: ResendEmailDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/email-activate')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ResendEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePasswordRecover\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePasswordRecover(lang: string, query: QueryUpdateRecoverPasswordDto, data: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-password-recover')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                QueryUpdateRecoverPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(lang: string, id: string, data: ValidateEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/validate-email')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ValidateEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(api_token: ValidateApiTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipThrottle()@Get('validate-token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controllers/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n                                    \n                                                ValidateApiTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { I18nLang } from 'nestjs-i18n';\nimport { IUserTokenDto } from 'src/modules/auth/dtos/user-token.dto';\nimport { JwtAuthGuard } from 'src/modules/auth/jwt-auth.guard';\nimport { CreateRefreshTokenDto } from '../../dtos/create-refresh-token.dto';\nimport { CreateUserDto } from '../../dtos/create-users.dto';\nimport { ValidateApiTokenDto } from '../../dtos/validate-api-token.dto';\nimport { LoginUserDto } from '../../dtos/login-users.dto';\nimport { UsersService } from '../../services/users/users.service';\nimport { SkipThrottle } from '@nestjs/throttler';\nimport { RecoverPasswordDto } from '../../dtos/recover-password.dto';\nimport { QueryUpdateRecoverPasswordDto } from '../../dtos/query-update-recover-password.dto';\nimport { UpdatePasswordDto } from '../../dtos/update-password.dto';\nimport { ValidateEmailDto } from '../../dtos/validate-email.dto';\nimport { ResendEmailDto } from '../../dtos/resend-email.dto';\n\n@Controller('api/users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  public async create(@Body() data: CreateUserDto, @I18nLang() lang: string) {\n    const user = await this.usersService.create(data, lang);\n    return user;\n  }\n\n  @Post('login')\n  public async login(@Body() data: LoginUserDto, @I18nLang() lang: string) {\n    return await this.usersService.login(data, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  public async getUsers(@Req() request) {\n    const user: IUserTokenDto = request.user;\n    return user;\n  }\n\n  @SkipThrottle()\n  @Patch('refresh-token')\n  public async refreshToken(\n    @Body() refreshToken: CreateRefreshTokenDto,\n    @I18nLang() lang: string,\n  ) {\n    return await this.usersService.refreshToken(refreshToken, lang);\n  }\n\n  @SkipThrottle()\n  @UseGuards(JwtAuthGuard)\n  @Patch('invalidate-token')\n  public async invalidateToken(@I18nLang() lang: string, @Req() request) {\n    const user: IUserTokenDto = request.user;\n    return await this.usersService.invalidateToken(user, lang);\n  }\n\n  @SkipThrottle()\n  @Get('validate-token')\n  public async validateToken(@Query() api_token: ValidateApiTokenDto) {\n    return await this.usersService.validateToken(api_token);\n  }\n\n  @Post('recover-password')\n  public async recoverPassword(\n    @I18nLang() lang: string,\n    @Body() data: RecoverPasswordDto,\n  ) {\n    return await this.usersService.recoverPassword(data.email, lang);\n  }\n\n  @Post('update-password-recover')\n  public async updatePasswordRecover(\n    @I18nLang() lang: string,\n    @Query() query: QueryUpdateRecoverPasswordDto,\n    @Body() data: UpdatePasswordDto,\n  ) {\n    return this.usersService.updatePasswordRecover(\n      query.token,\n      query.email,\n      data.password,\n      lang,\n    );\n  }\n\n  @Patch(':id/validate-email')\n  public async validateEmail(\n    @I18nLang() lang: string,\n    @Param('id') id: string,\n    @Body() data: ValidateEmailDto,\n  ) {\n    return this.usersService.validateEmail(id, data.code, lang);\n  }\n\n  @Post('resend-code-email')\n  public async resendCodeEmail(\n    @I18nLang() lang: string,\n    @Body() data: ResendEmailDto,\n  ) {\n    return this.usersService.resendCodeEmail(data.email, lang);\n  }\n\n  @Patch(':id/email-activate')\n  public async updateEmail(\n    @I18nLang() lang: string,\n    @Body() data: ResendEmailDto,\n    @Param('id') id: string,\n  ) {\n    return this.usersService.updateEmail(data.email, lang, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMailModule->UsersModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserSchema } from './schemas/user.schema';\nimport { UsersService } from './services/users/users.service';\nimport { UsersController } from './controllers/users/users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserRepository } from './repositories/implementation/user.repository';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from '../auth/constants';\nimport { MailModule } from '../mail/mail.module';\nimport { RefreshTokenSchema } from './schemas/refresh-tokens.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'User', schema: UserSchema },\n      { name: 'RefreshToken', schema: RefreshTokenSchema },\n    ]),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n    MailModule,\n  ],\n  providers: [UsersService, UserRepository],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/services/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                generateCodeEmail\n                            \n                            \n                                    Public\n                                    Async\n                                invalidateToken\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                recoverPassword\n                            \n                            \n                                    Public\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                resendCodeEmail\n                            \n                            \n                                    Public\n                                    Async\n                                updateEmail\n                            \n                            \n                                    Public\n                                    Async\n                                updatePasswordRecover\n                            \n                            \n                                    Public\n                                    Async\n                                validateEmail\n                            \n                            \n                                    Public\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: IUserRepository, mailService: MailService, i18n: I18nService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/services/users/users.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: CreateUserDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCodeEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCodeEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:423\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    invalidateToken(user: IUserTokenDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginUserDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        recoverPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(refresh_token: CreateRefreshTokenDto, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refresh_token\n                                    \n                                                CreateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        resendCodeEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    resendCodeEmail(email: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:433\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEmail(email: string, lang: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:478\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePasswordRecover\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePasswordRecover(token: string, email: string, password: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(user_id: string, code: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:370\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(api_token)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/users/users.service.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api_token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { I18nService } from 'nestjs-i18n';\nimport { Result } from 'src/shared/models/result';\nimport { CreateUserDto } from '../../dtos/create-users.dto';\nimport { UserRepository } from '../../repositories/implementation/user.repository';\nimport { IUserRepository } from '../../repositories/user-repository.interface';\nimport { verifyPasswordConfirmation } from '../../../../utils/verify-password-confirmation';\nimport * as bcrypt from 'bcrypt';\nimport { LoginUserDto } from '../../dtos/login-users.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { CreateRefreshTokenDto } from '../../dtos/create-refresh-token.dto';\nimport { IUserTokenDto } from 'src/modules/auth/dtos/user-token.dto';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { MailService } from 'src/modules/mail/mail.service';\nimport { differenceInMonths } from 'date-fns';\nimport { ResendEmailDto } from '../../dtos/resend-email.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(UserRepository)\n    private readonly userRepository: IUserRepository,\n    private mailService: MailService,\n    private readonly i18n: I18nService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  public async create(userData: CreateUserDto, lang: string) {\n    const emailExists = await this.userRepository.findByEmail(userData.email);\n    const verifyPassConfirmation = verifyPasswordConfirmation(\n      userData.password,\n      userData.confirmation_password,\n    );\n    if (!verifyPassConfirmation) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.PASSWORD_CONFIRMATION', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    if (emailExists) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.EMAIL_EXISTS', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n\n    const code = this.generateCodeEmail();\n\n    delete userData.confirmation_password;\n\n    userData.password = await bcrypt.hash(userData.password, 10);\n    userData.api_token = Md5.hashStr(userData + Date()).toString();\n    userData.code_validation_email = code;\n    try {\n      const user = await this.userRepository.create(userData);\n      await this.mailService.sendValidationEmail(\n        userData.email,\n        code,\n        user._id,\n      );\n\n      return new Result(\n        await this.i18n.translate('users.INSERT_SUCCESSFULLY', { lang }),\n        true,\n        {\n          api_token: userData.api_token,\n          user_id: user._id,\n          user_email: user.email,\n        },\n        null,\n      );\n    } catch (err) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.ERROR_INSERT_USER', { lang }),\n          false,\n          {},\n          err.message,\n        ),\n      );\n    }\n  }\n\n  public async login(data: LoginUserDto, lang: string) {\n    const user = await this.userRepository.findByEmail(data.email);\n\n    if (!user) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.USER_NOT_FOUND', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n\n    const isMatchPassword = await bcrypt.compare(data.password, user.password);\n    if (!isMatchPassword) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.USER_NOT_FOUND', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    if (user.code_validation_email != 'A') {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.REQUIRED_VALIDATE_EMAIL', {\n            lang,\n          }),\n          false,\n          { user_id: user._id, api_token: user.api_token },\n          null,\n        ),\n      );\n    }\n    const refTokens = await this.userRepository.findRefreshTokenByUser(user);\n\n    if (refTokens) {\n      for (let i = 0; i  timeToken.getTime() + 24 * 60 * 60 * 1000\n        ? true\n        : false;\n\n    if (timeExpires) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.TOKEN_RECOVER_PASS_EXPIRED', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    try {\n      await this.userRepository.setPassword(\n        userEmail._id,\n        await bcrypt.hash(password, 10),\n      );\n      return new Result(\n        await this.i18n.translate('users.UPDATE_PASSWORD', { lang }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async validateEmail(user_id: string, code: string, lang: string) {\n    const user = await this.userRepository.findById(user_id);\n    if (!user) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.NOT_FOUND_USER', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    if (user.code_validation_email === 'A') {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.USER_ALREADY_ACTIVE', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    if (user.code_validation_email != code) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.INVALID_CODE', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    try {\n      await this.userRepository.setCodeActivationEmail(user_id);\n      return new Result(\n        await this.i18n.translate('users.EMAIL_ACTIVE', { lang }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  private generateCodeEmail() {\n    const val1 = Math.floor(Math.random() * (9 - 0 + 1));\n    const val2 = Math.floor(Math.random() * (9 - 0 + 1));\n    const val3 = Math.floor(Math.random() * (9 - 0 + 1));\n    const val4 = Math.floor(Math.random() * (9 - 0 + 1));\n    const val5 = Math.floor(Math.random() * (9 - 0 + 1));\n    const val6 = Math.floor(Math.random() * (9 - 0 + 1));\n    return `${val1}${val2}${val3}${val4}${val5}${val6}`;\n  }\n\n  public async resendCodeEmail(email: string, lang: string) {\n    const user = await this.userRepository.findByEmail(email);\n    if (!user) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.NOT_FOUND_USER', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    if (user.code_validation_email === 'A') {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.USER_ALREADY_ACTIVE', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    try {\n      await this.mailService.sendValidationEmail(\n        email,\n        user.code_validation_email,\n        user._id,\n      );\n      return new Result(\n        await this.i18n.translate('users.EMAIL_CODE_SEND', { lang }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n\n  public async updateEmail(email: string, lang: string, id: string) {\n    const user = await this.userRepository.findById(id);\n    if (!user) {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.NOT_FOUND_USER', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n\n    if (user.code_validation_email === 'A') {\n      throw new BadRequestException(\n        new Result(\n          await this.i18n.translate('users.USER_ALREADY_ACTIVE', {\n            lang,\n          }),\n          false,\n          {},\n          null,\n        ),\n      );\n    }\n    try {\n      await this.userRepository.setEmail(id, email);\n      await this.mailService.sendValidationEmail(\n        email,\n        user.code_validation_email,\n        user._id,\n      );\n      return new Result(\n        await this.i18n.translate('users.EMAIL_CODE_SEND', { lang }),\n        true,\n        {},\n        null,\n      );\n    } catch (error) {\n      throw new BadRequestException(\n        new Result('Error in transaction', false, {}, null),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateApiTokenDto.html":{"url":"classes/ValidateApiTokenDto.html","title":"class - ValidateApiTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateApiTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/validate-api-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        api_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/validate-api-token.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class ValidateApiTokenDto {\n  @IsNotEmpty()\n  api_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateEmailDto.html":{"url":"classes/ValidateEmailDto.html","title":"class - ValidateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/validate-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/validate-email.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class ValidateEmailDto {\n  @IsNotEmpty()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/user-token.dto.ts\n            \n            interface\n            IUserTokenDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt-strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/links/controllers/links/links.controller.ts\n            \n            controller\n            LinksController\n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                src/modules/links/dtos/create-link.dto.ts\n            \n            class\n            CreateLinkDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/links/dtos/pagination-params.dto.ts\n            \n            class\n            PaginationParamsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/links/dtos/update-link.dto.ts\n            \n            class\n            UpdateLinkDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/links/models/link-infos.model.ts\n            \n            class\n            LinkInfos\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/links/models/link.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/links/repositories/implementations/link.repository.ts\n            \n            injectable\n            LinkRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/links/repositories/link-repository.interface.ts\n            \n            interface\n            ILinkRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/links/schemas/link-infos.schema.ts\n            \n            variable\n            LinkInfosSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/links/schemas/link.schema.ts\n            \n            variable\n            LinkSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/links/service/links/links.service.ts\n            \n            injectable\n            LinksService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/modules/links/shared/interceptors/links.interceptor.ts\n            \n            injectable\n            LinksInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/users/controllers/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/create-refresh-token.dto.ts\n            \n            class\n            CreateRefreshTokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/create-token-recover-password.dto.ts\n            \n            class\n            CreateTokenRecoverPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/create-users.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/login-users.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/query-update-recover-password.dto.ts\n            \n            class\n            QueryUpdateRecoverPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/recover-password.dto.ts\n            \n            class\n            RecoverPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/resend-email.dto.ts\n            \n            class\n            ResendEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/update-password.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/validate-api-token.dto.ts\n            \n            class\n            ValidateApiTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/validate-email.dto.ts\n            \n            class\n            ValidateEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/models/refresh-tokens.ts\n            \n            class\n            RefreshToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/models/users.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/repositories/implementation/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/modules/users/repositories/user-repository.interface.ts\n            \n            interface\n            IUserRepository\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/refresh-tokens.schema.ts\n            \n            variable\n            RefreshTokenSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/services/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/shared/models/result.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utils/generate-hash.ts\n            \n            function\n            generateHash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/verify-password-confirmation.ts\n            \n            function\n            verifyPasswordConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/throttler : ^2.0.0\n        \n            @types/date-fns : ^2.6.0\n        \n            @types/mongoose : ^5.11.97\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            date-fns : ^2.28.0\n        \n            ejs : ^3.1.6\n        \n            handlebars : ^4.7.7\n        \n            mongodb : ^3.7.3\n        \n            mongoose : ^6.2.1\n        \n            nestjs-i18n : ^8.2.2\n        \n            nestjs-real-ip : ^2.0.0\n        \n            nodemailer : ^6.7.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pug : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            ts-md5 : ^1.2.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateHash   (src/.../generate-hash.ts)\n                        \n                        \n                            verifyPasswordConfirmation   (src/.../verify-password-confirmation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/generate-hash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateHash\n                        \n                    \n                \n            \n            \n                \ngenerateHash(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/verify-password-confirmation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        verifyPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \nverifyPasswordConfirmation(password: string, confirmation_password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmation_password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nclila_service_api\nLink shortener service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LinksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LinksModule\n\n\n\ncluster_LinksModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLinksModule\n\nLinksModule\n\nAppModule -->\n\nLinksModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMailModule->UsersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLinkRepository\n\nLinkRepository\n\nLinksModule -->\n\nLinkRepository->LinksModule\n\n\n\nAppModule -->\n\nLinkRepository->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLinksService\n\nLinksService\n\nLinksModule -->\n\nLinksService->LinksModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nLinksModule -->\n\nUserRepository->LinksModule\n\n\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            LinkInfosSchema   (src/.../link-infos.schema.ts)\n                        \n                        \n                            LinkSchema   (src/.../link.schema.ts)\n                        \n                        \n                            RefreshTokenSchema   (src/.../refresh-tokens.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'e4ef52222d2ab38207ac69539c350c943550bddba9e09c691d84985d765e3f53',\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/links/schemas/link-infos.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LinkInfosSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  ip: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n  create_at: {\n    type: Date,\n    trim: true,\n  },\n  link: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Link',\n    required: true,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/links/schemas/link.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LinkSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n  surname: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n  original_link: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  short_link: {\n    type: String,\n    required: true,\n    trim: true,\n    index: {\n      unique: true,\n    },\n  },\n  hash_link: {\n    type: String,\n    required: true,\n    trim: true,\n    index: {\n      unique: true,\n    },\n  },\n  numbers_clicks: {\n    type: Number,\n    trim: true,\n    default: 0,\n  },\n  create_at: {\n    type: Date,\n    trim: true,\n  },\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: false,\n  },\n  active: {\n    type: Boolean,\n    trim: true,\n    default: true,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/users/schemas/refresh-tokens.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RefreshTokenSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  refresh_token: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true,\n  },\n\n  created_at: {\n    type: Date,\n    required: true,\n    trim: true,\n  },\n\n  updated_at: {\n    type: Date,\n    required: false,\n    trim: true,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    trim: true,\n    index: {\n      unique: true,\n    },\n  },\n\n  password: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n\n  api_token: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n\n  refresh_token: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n\n  recover_password_token: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n\n  date_generate_recover_password_token: {\n    type: Date,\n    trim: true,\n    default: null,\n  },\n\n  code_validation_email: {\n    type: String,\n    trim: true,\n    default: null,\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
